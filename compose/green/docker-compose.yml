###############################################################
# Core Science APIs - Green Instances
# green/docker-compose.yml
#
# This contains the Green instances of a blue/green science 
# API deployment. This differes from the static deployment 
# configuration in that there are no static port mappings 
# and containers may be brought up and down as needed. The 
# `traefic` container will handle load balancing and port 
# mapping dynamically by listening to the Docker daemon. 
# 
# Another difference between this deployment and the static 
# deployment is the use of Docker networking. The load balancer 
# will communicate with the containers over a private network 
# defined for that purpose, and handle SSL termination before 
# it gets to the backend containers. This means that all 
# containers can run over standard HTTP as they do not need to 
# be outwardly addressable. 
#
# As mentioned, this stack requires a `traefik` container be 
# running as a reverse proxy in front of these containers. 
# Once started, you do not need to bounce the `traefik` 
# container when deploying new containers.
#
# Starting:
# cd $AGAVE_HOME/compose && docker-compose -f proxy.yml up -d traefik
# cd $AGAVE_HOME/compose/thirdparty && docker-compose up -d 
# cd $AGAVE_HOME/compose/migrations && docker-compose up -d migrate
# cd $AGAVE_HOME/compose/green && docker-compose up -d
# 
#
# Recreating:
# cd $AGAVE_HOME/compose/blue-lb && docker-compose up -d --force-recreate
#
###############################################################

###############################################################
#   Agave Core Services (Green instance)
###############################################################

version: '2'

services:
  jobs:
    extends:
      file: '../service-definitions.yml'
      service: jobs
    ports:
      - "80"
  #    - "7081:80"
  #    - "7444:443"
      - "50018-50027:50018-50027"
    environment:
      - 'CONTAINER_STACK=green'
      - 'GLOBUS_TCP_PORT_RANGE=50018,50027'
  
  files:
    extends:
      file: '../service-definitions.yml'
      service: files
    ports:
      - "80"
  #    - "7082:80"
  #    - "7445:443"
      - "50311-50320:50311-50320"
    environment:
      - 'IPLANT_API_VERSION=$AGAVE_VERSION-green'
      - 'CONTAINER_STACK=green'
      - 'GLOBUS_TCP_PORT_RANGE=50311,50320'
  
  apps:
    extends:
      file: '../service-definitions.yml'
      service: apps
    ports:
      - "80"
  #    - "7083:80"
  #    - "7446:443"
      - "50911-50920:50911-50920"
    environment:
      - 'CONTAINER_STACK=green'
      - 'GLOBUS_TCP_PORT_RANGE=50911,50920'
  
  systems:
    extends:
      file: '../service-definitions.yml'
      service: systems
    ports:
      - "80"
  #    - "7084:80"
  #    - "7447:443"
    environment:
      - 'IPLANT_API_VERSION=$AGAVE_VERSION-green'
      - 'HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE=true'
      - 'CONTAINER_STACK=green'
  
  monitors:
    extends:
      file: '../service-definitions.yml'
      service: monitors
    ports:
      - "80"
  #    - "7085:80"
  #    - "7448:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  profiles:
    extends:
      file: '../service-definitions.yml'
      service: profiles
    ports:
      - "80"
  #    - "7086:80"
  #    - "7449:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  metadata:
    extends:
      file: '../service-definitions.yml'
      service: metadata
    ports:
      - "80"
  #    - "7087:80"
  #    - "7450:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  notifications:
    extends:
      file: '../service-definitions.yml'
      service: notifications
    ports:
      - "80"
  #    - "7088:80"
  #    - "7451:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  transforms:
    extends:
      file: '../service-definitions.yml'
      service: transforms
    ports:
      - "80"
  #    - "7098:80"
  #    - "7461:443"
      - "50611-50620:50611-50620"
    environment:
      - 'CONTAINER_STACK=green'
      - 'GLOBUS_TCP_PORT_RANGE=50611,50620'
  
  realtime:
    extends:
      file: '../service-definitions.yml'
      service: realtime
    ports:
      - "80"
  #    - "7076:80"
  #    - "7458:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  tags:
    extends:
      file: '../service-definitions.yml'
      service: tags
    ports:
      - "80"
  #    - "7077:80"
  #    - "7458:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  uuids:
    extends:
      file: '../service-definitions.yml'
      service: uuids
    # command: catalina.sh jpda run 2>&1
    ports:
      - "80"
#      - "8078:80"
#      - "8459:443"
    environment:
      - 'CONTAINER_STACK=green'
      
  postits:
    extends:
      file: '../service-definitions.yml'
      service: postits
    ports:
      - "80"
  #    - "7090:80"
  #    - "7453:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  usage:
    extends:
      file: '../service-definitions.yml'
      service: usage
    ports:
      - "80"
  #    - "7091:80"
  #    - "7454:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  tenants:
    extends:
      file: '../service-definitions.yml'
      service: tenants
    ports:
      - "80"
  #    - "7092:80"
  #    - "7455:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  logging:
    extends:
      file: '../service-definitions.yml'
      service: logging
    ports:
      - "80"
  #    - "7093:80"
  #    - "7456:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  docs:
    extends:
      file: '../service-definitions.yml'
      service: docs
    ports:
      - "80"
  #    - "7094:80"
  #    - "7457:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  stats:
    extends:
      file: '../service-definitions.yml'
      service: stats
    ports:
      - "80"
  #    - "7099:80"
  #    - "7462:443"
    environment:
      - 'CONTAINER_STACK=green'
  
  reverseip:
    extends:
      file: '../service-definitions.yml'
      service: reverseip
    environment:
      - 'CONTAINER_STACK=green' 
    networks:
      - backend
      - thirdparty
      
  redis:
    extends:
      file: '../service-definitions.yml'
      service: redis
    environment:
      - 'CONTAINER_STACK=green'
    volumes:
      - ./cache/redis_b:/data
    networks:
      - backend
      - thirdparty

networks:
  thirdparty:
    external:
      name: thirdparty_services
  realtime:
    external:
      name: thirdparty_realtime
  backend:
    external:
      name: proxy_backend 