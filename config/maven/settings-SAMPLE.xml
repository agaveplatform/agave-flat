<settings xmlns="http://maven.apache.org/SETTINGS/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd">

	<localRepository>${user.home}/.m2/repository</localRepository>
	<interactiveMode>true</interactiveMode>
	<usePluginRegistry>false</usePluginRegistry>
	<offline>false</offline>

	<servers>
		<server>
			<id>docker-registry</id>
			<username>%%DOCKER_USERNAME%%</username>
			<password>%%DOCKER_PASSWORD%%</password>
			<configuration>
				<email>%%DOCKER_EMAIL%%</email>
			</configuration>
		</server>
		<server>
			<id>agave-maven-releases</id>
			<username>%%NEXUS_USERNAME%%</username>
			<password>%%NEXUS_PASSWORD%%</password>
		</server>
	</servers>

	<profiles>
		<profile>
			<id>third-party-integration-test</id>
			<!-- *********************************************************************
				**	turns off unit tests and enables migrated db image build            **
				***********************************************************************-->
			<properties>
				<force.check.update>false</force.check.update>
				<force.check.version>false</force.check.version>

				<skip.integration.tests>false</skip.integration.tests>
				<skip.migrations>false</skip.migrations>

				<foundation.smtp.token>SG.SENDGRID_API_TOKEN</foundation.smtp.token>
				<slack.webhook.url>https://hooks.slack.com/services/INCOMING/WEBHOOK/URL</slack.webhook.url>

				<!-- **************** S3 Credentials for Integration Tests ********** -->
				<s3.bucket>AWS_BUCKET_NAME</s3.bucket>
				<s3.host>https://s3.amazonaws.com</s3.host>
				<s3.port>443</s3.port>
				<s3.access.key>AWS_ACCESS_KEY</s3.access.key>
				<s3.secret.key>AWS_SECRET_KEY</s3.secret.key>
			</properties>
		</profile>

		<profile>
			<id>publish</id>
			<!-- *********************************************************************
				**	turns off tests and build of unit test container                    **
				**	but keeps the api container build and enables image tagging and		**
				**  push to the docker central registry                                 **
				***********************************************************************-->
			<properties>
				<docker.registry.id>docker-registry</docker.registry.id>
				<force.docker.push>false</force.docker.push>
				<docker.registry.url>https://index.docker.io/v1/</docker.registry.url>
				<docker.registry.username>%%DOCKER_USERNAME%%</docker.registry.username>
			</properties>
		</profile>
	</profiles>
</settings>
