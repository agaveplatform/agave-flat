<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.iplantc.agave</groupId>
		<artifactId>transforms</artifactId>
		<version>2.1.8</version>
	</parent>
	<artifactId>transforms-core</artifactId>
	<name>iPlant Agave API Transforms Service Core</name>
	<description>Core service libs for the agave transforms service</description>

	<scm>
		<connection>scm:git:ssh://git@bitbucket.org/agaveapi/agave-transforms.git</connection>
		<developerConnection>scm:git:ssh://git@bitbucket.org/agaveapi/agave-transforms.git</developerConnection>
		<url>https://bitbucket.org/agaveapi/agave-transforms</url>
	</scm>

	<properties>
		<force.check.update>false</force.check.update>
	</properties>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>install</id>
						<phase>install</phase>
						<goals>
							<goal>sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<proc>none</proc>
					<debug>true</debug>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- Attach testng to the surefire execution -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>
			</plugin>

<!--
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>

				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.22</version>
					</dependency>
				</dependencies>

				&lt;!&ndash; common configuration shared by all executions &ndash;&gt;
				<configuration>
					<driver>${foundation.db.driver}</driver>
					<url>${foundation.db.bootstrap}</url>
					<username>${foundation.db.username}</username>
					<password>${foundation.db.password}</password>
					<settingsKey>sensibleKey</settingsKey>
					&lt;!&ndash;all executions are ignored if -Dmaven.test.skip=true &ndash;&gt;
					<skip>${maven.test.skip}</skip>
				</configuration>
				<executions>
					<execution>
						<id>drop-db-before-test-if-any</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							&lt;!&ndash; need another database to drop the targeted one &ndash;&gt;
							<url>${foundation.db.bootstrap}</url>
							<autocommit>true</autocommit>
							<sqlCommand>drop database test</sqlCommand>
							&lt;!&ndash; ignore error when database is not avaiable &ndash;&gt;
							<onError>continue</onError>
						</configuration>
					</execution>

					<execution>
						<id>create-db</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>${foundation.db.bootstrap}</url>
							&lt;!&ndash; no transaction &ndash;&gt;
							<autocommit>true</autocommit>
							<sqlCommand>create database test</sqlCommand>
						</configuration>
					</execution>
				</executions>
			</plugin>
-->
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>files-core</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
</project>
