// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/proto/sftp.proto

package com.proto.go.sftp;

/**
 * Protobuf type {@code sftp.Sftp}
 */
public  final class Sftp extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:sftp.Sftp)
    SftpOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Sftp.newBuilder() to construct.
  private Sftp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Sftp() {
    username_ = "";
    passWord_ = "";
    systemId_ = "";
    hostKey_ = "";
    fileName_ = "";
    hostPort_ = "";
    clientKey_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new Sftp();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Sftp(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            String s = input.readStringRequireUtf8();

            username_ = s;
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            passWord_ = s;
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            systemId_ = s;
            break;
          }
          case 34: {
            String s = input.readStringRequireUtf8();

            hostKey_ = s;
            break;
          }
          case 42: {
            String s = input.readStringRequireUtf8();

            fileName_ = s;
            break;
          }
          case 50: {
            String s = input.readStringRequireUtf8();

            hostPort_ = s;
            break;
          }
          case 58: {
            String s = input.readStringRequireUtf8();

            clientKey_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.proto.go.sftp.SftpOuterClass.internal_static_sftp_Sftp_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.proto.go.sftp.SftpOuterClass.internal_static_sftp_Sftp_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Sftp.class, Builder.class);
  }

  public static final int USERNAME_FIELD_NUMBER = 1;
  private volatile Object username_;
  /**
   * <code>string username = 1;</code>
   */
  public String getUsername() {
    Object ref = username_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      username_ = s;
      return s;
    }
  }
  /**
   * <code>string username = 1;</code>
   */
  public com.google.protobuf.ByteString
      getUsernameBytes() {
    Object ref = username_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      username_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PASSWORD_FIELD_NUMBER = 2;
  private volatile Object passWord_;
  /**
   * <code>string passWord = 2;</code>
   */
  public String getPassWord() {
    Object ref = passWord_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      passWord_ = s;
      return s;
    }
  }
  /**
   * <code>string passWord = 2;</code>
   */
  public com.google.protobuf.ByteString
      getPassWordBytes() {
    Object ref = passWord_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      passWord_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SYSTEMID_FIELD_NUMBER = 3;
  private volatile Object systemId_;
  /**
   * <code>string systemId = 3;</code>
   */
  public String getSystemId() {
    Object ref = systemId_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      systemId_ = s;
      return s;
    }
  }
  /**
   * <code>string systemId = 3;</code>
   */
  public com.google.protobuf.ByteString
      getSystemIdBytes() {
    Object ref = systemId_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      systemId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HOSTKEY_FIELD_NUMBER = 4;
  private volatile Object hostKey_;
  /**
   * <code>string hostKey = 4;</code>
   */
  public String getHostKey() {
    Object ref = hostKey_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      hostKey_ = s;
      return s;
    }
  }
  /**
   * <code>string hostKey = 4;</code>
   */
  public com.google.protobuf.ByteString
      getHostKeyBytes() {
    Object ref = hostKey_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      hostKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILENAME_FIELD_NUMBER = 5;
  private volatile Object fileName_;
  /**
   * <code>string fileName = 5;</code>
   */
  public String getFileName() {
    Object ref = fileName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      fileName_ = s;
      return s;
    }
  }
  /**
   * <code>string fileName = 5;</code>
   */
  public com.google.protobuf.ByteString
      getFileNameBytes() {
    Object ref = fileName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      fileName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HOSTPORT_FIELD_NUMBER = 6;
  private volatile Object hostPort_;
  /**
   * <code>string hostPort = 6;</code>
   */
  public String getHostPort() {
    Object ref = hostPort_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      hostPort_ = s;
      return s;
    }
  }
  /**
   * <code>string hostPort = 6;</code>
   */
  public com.google.protobuf.ByteString
      getHostPortBytes() {
    Object ref = hostPort_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      hostPort_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLIENTKEY_FIELD_NUMBER = 7;
  private volatile Object clientKey_;
  /**
   * <code>string clientKey = 7;</code>
   */
  public String getClientKey() {
    Object ref = clientKey_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      clientKey_ = s;
      return s;
    }
  }
  /**
   * <code>string clientKey = 7;</code>
   */
  public com.google.protobuf.ByteString
      getClientKeyBytes() {
    Object ref = clientKey_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      clientKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getUsernameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, username_);
    }
    if (!getPassWordBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, passWord_);
    }
    if (!getSystemIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, systemId_);
    }
    if (!getHostKeyBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, hostKey_);
    }
    if (!getFileNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, fileName_);
    }
    if (!getHostPortBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, hostPort_);
    }
    if (!getClientKeyBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, clientKey_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getUsernameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, username_);
    }
    if (!getPassWordBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, passWord_);
    }
    if (!getSystemIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, systemId_);
    }
    if (!getHostKeyBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, hostKey_);
    }
    if (!getFileNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, fileName_);
    }
    if (!getHostPortBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, hostPort_);
    }
    if (!getClientKeyBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, clientKey_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Sftp)) {
      return super.equals(obj);
    }
    Sftp other = (Sftp) obj;

    if (!getUsername()
        .equals(other.getUsername())) return false;
    if (!getPassWord()
        .equals(other.getPassWord())) return false;
    if (!getSystemId()
        .equals(other.getSystemId())) return false;
    if (!getHostKey()
        .equals(other.getHostKey())) return false;
    if (!getFileName()
        .equals(other.getFileName())) return false;
    if (!getHostPort()
        .equals(other.getHostPort())) return false;
    if (!getClientKey()
        .equals(other.getClientKey())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + USERNAME_FIELD_NUMBER;
    hash = (53 * hash) + getUsername().hashCode();
    hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
    hash = (53 * hash) + getPassWord().hashCode();
    hash = (37 * hash) + SYSTEMID_FIELD_NUMBER;
    hash = (53 * hash) + getSystemId().hashCode();
    hash = (37 * hash) + HOSTKEY_FIELD_NUMBER;
    hash = (53 * hash) + getHostKey().hashCode();
    hash = (37 * hash) + FILENAME_FIELD_NUMBER;
    hash = (53 * hash) + getFileName().hashCode();
    hash = (37 * hash) + HOSTPORT_FIELD_NUMBER;
    hash = (53 * hash) + getHostPort().hashCode();
    hash = (37 * hash) + CLIENTKEY_FIELD_NUMBER;
    hash = (53 * hash) + getClientKey().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Sftp parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Sftp parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Sftp parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Sftp parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Sftp parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Sftp parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Sftp parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Sftp parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static Sftp parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static Sftp parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Sftp parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Sftp parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Sftp prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code sftp.Sftp}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:sftp.Sftp)
      com.proto.go.sftp.SftpOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.proto.go.sftp.SftpOuterClass.internal_static_sftp_Sftp_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.proto.go.sftp.SftpOuterClass.internal_static_sftp_Sftp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Sftp.class, Builder.class);
    }

    // Construct using com.proto.go.sftp.Sftp.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      username_ = "";

      passWord_ = "";

      systemId_ = "";

      hostKey_ = "";

      fileName_ = "";

      hostPort_ = "";

      clientKey_ = "";

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.proto.go.sftp.SftpOuterClass.internal_static_sftp_Sftp_descriptor;
    }

    @Override
    public Sftp getDefaultInstanceForType() {
      return Sftp.getDefaultInstance();
    }

    @Override
    public Sftp build() {
      Sftp result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Sftp buildPartial() {
      Sftp result = new Sftp(this);
      result.username_ = username_;
      result.passWord_ = passWord_;
      result.systemId_ = systemId_;
      result.hostKey_ = hostKey_;
      result.fileName_ = fileName_;
      result.hostPort_ = hostPort_;
      result.clientKey_ = clientKey_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Sftp) {
        return mergeFrom((Sftp)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Sftp other) {
      if (other == Sftp.getDefaultInstance()) return this;
      if (!other.getUsername().isEmpty()) {
        username_ = other.username_;
        onChanged();
      }
      if (!other.getPassWord().isEmpty()) {
        passWord_ = other.passWord_;
        onChanged();
      }
      if (!other.getSystemId().isEmpty()) {
        systemId_ = other.systemId_;
        onChanged();
      }
      if (!other.getHostKey().isEmpty()) {
        hostKey_ = other.hostKey_;
        onChanged();
      }
      if (!other.getFileName().isEmpty()) {
        fileName_ = other.fileName_;
        onChanged();
      }
      if (!other.getHostPort().isEmpty()) {
        hostPort_ = other.hostPort_;
        onChanged();
      }
      if (!other.getClientKey().isEmpty()) {
        clientKey_ = other.clientKey_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Sftp parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (Sftp) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private Object username_ = "";
    /**
     * <code>string username = 1;</code>
     */
    public String getUsername() {
      Object ref = username_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        username_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string username = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      Object ref = username_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string username = 1;</code>
     */
    public Builder setUsername(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      username_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string username = 1;</code>
     */
    public Builder clearUsername() {
      
      username_ = getDefaultInstance().getUsername();
      onChanged();
      return this;
    }
    /**
     * <code>string username = 1;</code>
     */
    public Builder setUsernameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      username_ = value;
      onChanged();
      return this;
    }

    private Object passWord_ = "";
    /**
     * <code>string passWord = 2;</code>
     */
    public String getPassWord() {
      Object ref = passWord_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        passWord_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string passWord = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPassWordBytes() {
      Object ref = passWord_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        passWord_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string passWord = 2;</code>
     */
    public Builder setPassWord(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      passWord_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string passWord = 2;</code>
     */
    public Builder clearPassWord() {
      
      passWord_ = getDefaultInstance().getPassWord();
      onChanged();
      return this;
    }
    /**
     * <code>string passWord = 2;</code>
     */
    public Builder setPassWordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      passWord_ = value;
      onChanged();
      return this;
    }

    private Object systemId_ = "";
    /**
     * <code>string systemId = 3;</code>
     */
    public String getSystemId() {
      Object ref = systemId_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        systemId_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string systemId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSystemIdBytes() {
      Object ref = systemId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        systemId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string systemId = 3;</code>
     */
    public Builder setSystemId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      systemId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string systemId = 3;</code>
     */
    public Builder clearSystemId() {
      
      systemId_ = getDefaultInstance().getSystemId();
      onChanged();
      return this;
    }
    /**
     * <code>string systemId = 3;</code>
     */
    public Builder setSystemIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      systemId_ = value;
      onChanged();
      return this;
    }

    private Object hostKey_ = "";
    /**
     * <code>string hostKey = 4;</code>
     */
    public String getHostKey() {
      Object ref = hostKey_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        hostKey_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string hostKey = 4;</code>
     */
    public com.google.protobuf.ByteString
        getHostKeyBytes() {
      Object ref = hostKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        hostKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string hostKey = 4;</code>
     */
    public Builder setHostKey(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hostKey_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string hostKey = 4;</code>
     */
    public Builder clearHostKey() {
      
      hostKey_ = getDefaultInstance().getHostKey();
      onChanged();
      return this;
    }
    /**
     * <code>string hostKey = 4;</code>
     */
    public Builder setHostKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      hostKey_ = value;
      onChanged();
      return this;
    }

    private Object fileName_ = "";
    /**
     * <code>string fileName = 5;</code>
     */
    public String getFileName() {
      Object ref = fileName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string fileName = 5;</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      Object ref = fileName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string fileName = 5;</code>
     */
    public Builder setFileName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fileName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string fileName = 5;</code>
     */
    public Builder clearFileName() {
      
      fileName_ = getDefaultInstance().getFileName();
      onChanged();
      return this;
    }
    /**
     * <code>string fileName = 5;</code>
     */
    public Builder setFileNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fileName_ = value;
      onChanged();
      return this;
    }

    private Object hostPort_ = "";
    /**
     * <code>string hostPort = 6;</code>
     */
    public String getHostPort() {
      Object ref = hostPort_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        hostPort_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string hostPort = 6;</code>
     */
    public com.google.protobuf.ByteString
        getHostPortBytes() {
      Object ref = hostPort_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        hostPort_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string hostPort = 6;</code>
     */
    public Builder setHostPort(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hostPort_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string hostPort = 6;</code>
     */
    public Builder clearHostPort() {
      
      hostPort_ = getDefaultInstance().getHostPort();
      onChanged();
      return this;
    }
    /**
     * <code>string hostPort = 6;</code>
     */
    public Builder setHostPortBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      hostPort_ = value;
      onChanged();
      return this;
    }

    private Object clientKey_ = "";
    /**
     * <code>string clientKey = 7;</code>
     */
    public String getClientKey() {
      Object ref = clientKey_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        clientKey_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string clientKey = 7;</code>
     */
    public com.google.protobuf.ByteString
        getClientKeyBytes() {
      Object ref = clientKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        clientKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string clientKey = 7;</code>
     */
    public Builder setClientKey(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clientKey_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string clientKey = 7;</code>
     */
    public Builder clearClientKey() {
      
      clientKey_ = getDefaultInstance().getClientKey();
      onChanged();
      return this;
    }
    /**
     * <code>string clientKey = 7;</code>
     */
    public Builder setClientKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clientKey_ = value;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:sftp.Sftp)
  }

  // @@protoc_insertion_point(class_scope:sftp.Sftp)
  private static final Sftp DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Sftp();
  }

  public static Sftp getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Sftp>
      PARSER = new com.google.protobuf.AbstractParser<Sftp>() {
    @Override
    public Sftp parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Sftp(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Sftp> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Sftp> getParserForType() {
    return PARSER;
  }

  @Override
  public Sftp getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

