<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.agaveplatform</groupId>
    <artifactId>science-apis</artifactId>
    <version>2.2.24</version>
    <name>Agave Platform Science API Parent POM</name>
    <description>Super pom for all Agave services</description>
    <packaging>pom</packaging>
    <organization>
        <name>Agave Platform</name>
        <url>http://agaveplatform.org</url>
    </organization>
    <developers>
        <developer>
            <id>deardooley</id>
            <name>Rion Dooleyy</name>
            <email>deardooley@gmail.com</email>
            <url>https://agaveplatform.org</url>
            <organization>Chapman University</organization>
            <organizationUrl>http://chapman.edu</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>ertanner</id>
            <name>Eric Tanner</name>
            <email>ertanner@gmail.com</email>
            <url>https://agaveplatform.org</url>
            <organization>Chapman University</organization>
            <organizationUrl>http://chapman.edu</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/agaveplatform/science-apis.git</connection>
        <developerConnection>scm:git:ssh://git@github.com:agaveplatform/science-apis.git</developerConnection>
        <url>https://github.com/agaveplatform/science-apis</url>
    </scm>
    <repositories>
        <repository>
            <id>agave-maven-public</id>
            <name>Agave Maven public mirror</name>
            <url>https://nexus.agaveplatform.org/repository/maven-public/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>agave-maven-plugins</id>
            <name>Agave Platform Maven Repository</name>
            <url>https://nexus.agaveplatform.org/nexus/repository/maven-releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <!-- This build's label -->
        <foundation.service.version>${project.version}-r${buildNumber}</foundation.service.version>

        <!-- Java version -->
        <java-source.version>9</java-source.version>
        <java-target.version>9</java-target.version>

        <!-- required for jdk9 -->
        <maven.compiler.source>1.9</maven.compiler.source>
        <maven.compiler.target>1.9</maven.compiler.target>

        <!-- Below are the version numbers for all software on which we explicitly depend. -->
        <!-- If a library or plugin appears as a dependency in some pom file, then that    -->
        <!-- artifact's version number should be in the lists below for easy managment and -->
        <!-- access.  Version numbers are organized into 2 lists, one for plugins and the  -->
        <!-- other for library dependencies.                                               -->
        <!--                                                                               -->
        <!-- Note that we specify the versions of the base maven plugins so that they      -->
        <!-- don't change from underneath us.  This approach requires us to manually       -->
        <!-- upgrade the plugins we use; a reasonable upgrade cycle would be every 6-12    -->
        <!-- months.  See http://maven.apache.org/plugins/index.html for latest plugin     -->
        <!-- listing.  Last upgrade occurred on 4/24/2017.                                 -->
        <!--                                                                               -->
        <!--                    PLEASE KEEP THESE LISTS ALPHABETIZED                       -->

        <!-- PLUGIN Versions (in alphabetical order) -->
        <await-maven-plugin.version>1.3</await-maven-plugin.version>
        <buildnumber-maven-plugin.version>1.3</buildnumber-maven-plugin.version>
        <directory-maven-plugin.version>0.1</directory-maven-plugin.version>
        <docker-compose-maven-plugin.version>2.5.1</docker-compose-maven-plugin.version>
        <docker-maven-plugin.version>0.4.13</docker-maven-plugin.version>
        <duplicate-finder-maven-plugin.version>1.2.1</duplicate-finder-maven-plugin.version>
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
        <flyway-maven-plugin.version>4.0</flyway-maven-plugin.version>
        <flyway-maven-plugin.versionRange>[4.0,)</flyway-maven-plugin.versionRange>
        <jacoco.version>0.8.1</jacoco.version>
        <jgitflow-maven-plugin.version>1.0-m5.1</jgitflow-maven-plugin.version>
        <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
        <maven-assembly-plugin.version>3.1.1</maven-assembly-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <maven-jar-plugin.version>3.1.2</maven-jar-plugin.version>
<!--        <maven-jib-plugin.version>1.7.0</maven-jib-plugin.version>-->
        <maven-php-plugin.version>2.0.2</maven-php-plugin.version>
        <maven-shade-plugin.version>3.2.1</maven-shade-plugin.version>
        <maven-site-plugin.version>3.8.2</maven-site-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M3</maven-failsafe-plugin.version>
        <maven-war-plugin.version>3.2.3</maven-war-plugin.version>
        <org.eclipse.m2e.lifecycle-mapping.version>1.0.0</org.eclipse.m2e.lifecycle-mapping.version>

        <!-- LIBRARY Versions (in alphabetical order) -->
        <amqp-client.version>3.1.4</amqp-client.version>
        <ant.version>1.8.2</ant.version>
        <BeanstalkClient.version>1.6.0</BeanstalkClient.version>
        <commons-codec.version>1.7</commons-codec.version>
        <commons-exec.version>1.1</commons-exec.version>
        <commons-fileupload.version>1.2.2</commons-fileupload.version>
        <commons-io.version>2.1</commons-io.version>
        <commons-lang.version>2.5</commons-lang.version>
        <commons-math3.version>3.5</commons-math3.version>
        <commons-validator.version>1.4.0</commons-validator.version>
        <el-api.version>2.2</el-api.version>
        <flyway-core.version>6.0.7</flyway-core.version>
        <gsissh.version>0.12.1</gsissh.version>
        <gson.version>2.2.4</gson.version>
        <guava.version>26.0-android</guava.version>
        <guice.version>3.0</guice.version>
        <hibernate-entitymanager.version>3.6.10.Final</hibernate-entitymanager.version>
        <hibernate-validator-annotation-processor.version>5.0.1.Final</hibernate-validator-annotation-processor.version>
        <hibernate-validator.version>4.1.0.Final</hibernate-validator.version>
        <httpclient.version>4.3.4</httpclient.version>
        <httpmime.version>4.3.1</httpmime.version>
        <ironmq.version>3.0.2</ironmq.version>
        <jackson-antpathfilter.version>1.0.1</jackson-antpathfilter.version>
        <jackson.version>2.5.5</jackson.version>
        <jargon-core.version>4.2.0.0-RELEASE</jargon-core.version>
        <jasypt.version>1.9.0</jasypt.version>
        <javax.el.version>2.2.4</javax.el.version>
        <javax.ws.rs-api.version>2.0</javax.ws.rs-api.version>
        <jboss-logging.version>3.1.3.GA</jboss-logging.version>
        <jclouds.version>2.2.0</jclouds.version>
        <jglobus.version>2.1.0</jglobus.version>
        <bcprov.jdk15on>1.5.0</bcprov.jdk15on>
        <joda-time.version>2.2</joda-time.version>
        <json-path.version>2.2.0</json-path.version>
        <json-schema-validator.version>2.0.1</json-schema-validator.version>
        <json.version>20090211</json.version>
        <junit.version>3.8.1</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <mail.version>1.4.6</mail.version>
        <maverick.version>1.6.3</maverick.version>
        <mongo-java-driver.version>3.6.3</mongo-java-driver.version>
        <mongojack.version>2.6.0</mongojack.version>
        <mysql-connector-java.version>8.0.13</mysql-connector-java.version>
        <mariadb-connector-java.version>2.4.0</mariadb-connector-java.version>
        <nimbus-jose-jwt.version>2.20</nimbus-jose-jwt.version>
        <pat.version>1.5.3</pat.version>
        <plexus-archiver.version>3.0.1</plexus-archiver.version>
        <plexus-log4j-logging.version>1.0</plexus-log4j-logging.version>
        <plexus-utils.version>3.0.15</plexus-utils.version>
        <powermock.version>1.7.4</powermock.version>
        <quartz.version>2.1.7</quartz.version>
        <reflections.version>0.9.9</reflections.version>
        <restlet.version>2.3.4</restlet.version>
        <sendgrid-java.version>2.2.2</sendgrid-java.version>
        <servlet-api.version>2.4</servlet-api.version>
        <simple-http.version>1.0-jdk6</simple-http.version>
        <simple-jndi.version>0.11.4.1</simple-jndi.version>
        <slf4j-api.version>1.6.1</slf4j-api.version>
        <slf4j-log4j12.version>1.6.1</slf4j-log4j12.version>
<!--        <spring.version>3.2.0.RELEASE</spring.version>-->
        <testng.version>6.9.12</testng.version>
        <twilio-java-sdk.version>3.4.1</twilio-java-sdk.version>
        <uuid.version>3.4.0</uuid.version>
        <validator-collection.version>2.1.6</validator-collection.version>
        <xstream.version>1.4.7</xstream.version>

        <!-- LIBRARY Version special cases -->
        <hibernate-validator.PROFILES.version>5.0.1.Final</hibernate-validator.PROFILES.version>

        <!-- OTHER properties (in alphabetical order) -->
        <docker.image.commit.hash>${buildNumber}</docker.image.commit.hash>
        <force.check.update>true</force.check.update>
        <force.check.version>true</force.check.version>
        <force.docker.environment>false</force.docker.environment>
        <main.basedir>${project.basedir}</main.basedir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.inceptionYear>2011</project.inceptionYear>

        <skip.create-db>true</skip.create-db>
        <skip.docker.build>true</skip.docker.build>
        <skip.integration.tests>true</skip.integration.tests>
        <skip.unit.tests>true</skip.unit.tests>
        <skip.integration.s3.tests>true</skip.integration.s3.tests>


    </properties>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.2</version>
            </extension>
        </extensions>

        <plugins>
            <!-- This plugin can be used find duplicate classes on the classpath of each -->
            <!-- subproject.  Adding the "check" goal below runs this plugin.  A better  -->
            <!-- approach is to run the following command from the top-level Agave       -->
            <!-- directory:  mvn duplicate-finder:check.  Run mvn duplicate-finder:help  -->
            <!-- for more information.                                                   -->
            <!--                                                                         -->
            <!-- Also see https://github.com/basepom/duplicate-finder-maven-plugin/wiki  -->
            <plugin>
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>
                <version>${duplicate-finder-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>verify</phase>
                        <goals></goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>${buildnumber-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>last-commit-hash</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>another-last-commit-hash</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <shortRevisionLength>7</shortRevisionLength>
                    <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                    <doCheck>${force.check.version}</doCheck>
                    <doUpdate>${force.check.update}</doUpdate>
                </configuration>
            </plugin>
            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <version>${jgitflow-maven-plugin.version}</version>
                <configuration>
                    <allowSnapshots>false</allowSnapshots>
                    <allowUntracked>false</allowUntracked>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <updateDependencies>true</updateDependencies>
                    <buildNumber>${buildNumber}</buildNumber>
                    <flowInitContext>
                        <masterBranchName>master</masterBranchName>
                        <developBranchName>devel</developBranchName>
                        <featureBranchPrefix>feature-</featureBranchPrefix>
                        <releaseBranchPrefix>release-</releaseBranchPrefix>
                        <hotfixBranchPrefix>hotfix-</hotfixBranchPrefix>
                        <versionTagPrefix></versionTagPrefix>
                    </flowInitContext>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>

            <plugins>
                <!-- Boilerplace compile -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <proc>none</proc>
                        <debug>true</debug>
                        <source>${java-source.version}</source>
                        <target>${java-target.version}</target>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>

                <!--  Basic unit test execution -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <skipTests>${skip.unit.tests}</skipTests>
                        <groups>unit</groups>
                        <excludedGroups>broken,notReady</excludedGroups>
                        <systemPropertyVariables>
                            <log4j.configuration>file:${basedir}/src/test/resources/log4j.properties
                            </log4j.configuration>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>

                <!-- Integration test containers providing all third-party services, compute,      -->
                <!-- storage, etc. needed by the tests in this module. Two plugins work in tandem  -->
                <!-- here. The first starts up the containers using Docker Compose via the         -->
                <!-- docker-compose-maven-plugin. This will start all the containers and guarantee -->
                <!-- they are running. The second performs a rediness check on the containers      -->
                <!-- ensuring they are ready to accept connections prior to the tests being run.   -->
                <!-- This keeps us from experiencing test failures due to a db waiting to finish   -->
                <!-- initializing.																   -->
                <!--																			   -->
                <!-- Once the integration tests finish, the containers are torn down and destroyed -->
                <!-- by the docker-compose-maven-plugin. No data will be kept between invocations  -->
                <!-- of maven.																	   -->

                <!-- Starts and stops integration containers with Docker Compose -->
                <plugin>
                    <groupId>com.dkanejs.maven.plugins</groupId>
                    <artifactId>docker-compose-maven-plugin</artifactId>
                    <version>${docker-compose-maven-plugin.version}</version>
                    <configuration>
                        <skip>${skip.integration.tests}</skip>
                        <detachedMode>true</detachedMode>
                        <projectName>${project.artifactId}</projectName>
                        <composeFiles>
                            <composeFile>${project.basedir}/target/test-classes/docker-compose.yml</composeFile>
                            <composeFile>${main.basedir}/compose/third-party/docker-compose.yml</composeFile>
                        </composeFiles>
                        <ignorePullFailures>true</ignorePullFailures>
                    </configuration>
                    <executions>
                        <execution>
                            <id>${project.artifactId}up</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>up</goal>
                            </goals>
                            <configuration>
                                <skip>${skip.integration.tests}</skip>
                            </configuration>
                        </execution>
                        <execution>
                            <id>${project.artifactId}down</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>down</goal>
                            </goals>
                            <configuration>
                                <removeVolumes>true</removeVolumes>
                                <skip>${skip.integration.tests}</skip>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Introduces an initial pause for containers to start followed
                    by a connection check via tcp or http(s) to a given port and
                    hostname. This provides certainty that our containers are up
                    for integration testing prior to the tests running -->
                <plugin>
                    <groupId>org.agaveplatform.ops</groupId>
                    <artifactId>await-maven-plugin</artifactId>
                    <version>${await-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>Await</goal>
                            </goals>
                            <configuration>
                                <skip>${skip.integration.tests}</skip>
                                <initialWait>5000</initialWait>
                                <poll>
                                    <attempts>15</attempts>
                                    <sleep>2000</sleep>
                                </poll>
                                <tcpConnections>
                                    <tcpConnection>
                                        <host>${foundation.db.test.host}</host>
                                        <port>${foundation.db.test.port}</port>
                                    </tcpConnection>
                                    <tcpConnection>
                                        <host>${foundation.service.meta.db.host}</host>
                                        <port>${foundation.service.meta.db.port}</port>
                                    </tcpConnection>
                                </tcpConnections>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Basic integration test execution -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <skipTests>${skip.integration.tests}</skipTests>
                        <groups>integration</groups>
                        <excludedGroups>broken,notReady</excludedGroups>
                        <systemPropertyVariables>
                            <log4j.configuration>file:${basedir}/src/test/resources/log4j.properties
                            </log4j.configuration>
                        </systemPropertyVariables>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                    <configuration>
                        <packagingExcludes>
                            WEB-INF/lib/servlet-api*.jar,
                            WEB-INF/lib/javax.servlet-*.jar
                        </packagingExcludes>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.phpmaven</groupId>
                    <artifactId>maven-php-plugin</artifactId>
                    <version>${maven-php-plugin.version}</version>
                </plugin>

                <!-- This plugin handles layered docker builds of each submodule. Using     -->
                <!-- this approach significantly speeds up sucessive builds and make 		-->
                <!-- deployment via skaffold significantly easier for new and seasoned      -->
                <!-- contributors.															-->
<!--                <plugin>-->
<!--                    <groupId>com.google.cloud.tools</groupId>-->
<!--                    <artifactId>jib-maven-plugin</artifactId>-->
<!--                    <version>${maven-jib-plugin.version}</version>-->
<!--                </plugin>-->

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <distributionManagement>
        <repository>
            <id>agave-releases</id>
            <name>Agave Internal Release Repository</name>
            <url>https://nexus.agaveplatform.org/nexus/repository/releases</url>
        </repository>
        <snapshotRepository>
            <id>agave-snapshots</id>
            <name>Agave Internal Snapshot Repository</name>
            <url>https://nexus.agaveplatform.org/nexus/repository/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <!--                   Global Dependencies                        -->
    <!--                                                              -->
    <!-- Only add dependencies here that are used by EVERY submodule. -->
    <dependencies>
        <dependency>
            <!-- There are non-test compile dependencies on testng -->
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <modules>
        <module>agave-migrations</module>
        <module>agave-protos</module>
        <module>agave-transfers</module>
        <module>agave-common</module>
        <module>agave-postits</module>
        <module>agave-usage</module>
        <module>agave-tenants</module>
        <module>agave-logging</module>
        <module>agave-notifications</module>
        <module>agave-profiles</module>
        <module>agave-metadata</module>
        <module>agave-systems</module>
        <module>agave-monitors</module>
        <module>agave-files</module>
        <module>agave-apps</module>
        <module>agave-jobs</module>
        <module>agave-tags</module>
        <module>agave-realtime</module>
        <module>agave-stats</module>
        <module>agave-uuids</module>
        <module>agave-apidocs</module>
    </modules>
</project>