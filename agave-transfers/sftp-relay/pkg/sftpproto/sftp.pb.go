// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sftp.proto

package sftpproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Sftp struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	PassWord             string   `protobuf:"bytes,2,opt,name=passWord,proto3" json:"passWord,omitempty"`
	SystemId             string   `protobuf:"bytes,3,opt,name=systemId,proto3" json:"systemId,omitempty"`
	HostKey              string   `protobuf:"bytes,4,opt,name=hostKey,proto3" json:"hostKey,omitempty"`
	FileName             string   `protobuf:"bytes,5,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize             int64    `protobuf:"varint,6,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	HostPort             string   `protobuf:"bytes,7,opt,name=hostPort,proto3" json:"hostPort,omitempty"`
	ClientKey            string   `protobuf:"bytes,8,opt,name=clientKey,proto3" json:"clientKey,omitempty"`
	BufferSize           int64    `protobuf:"varint,9,opt,name=bufferSize,proto3" json:"bufferSize,omitempty"`
	Type                 string   `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	DestFileName         string   `protobuf:"bytes,11,opt,name=destFileName,proto3" json:"destFileName,omitempty"`
	Force                bool     `protobuf:"varint,12,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sftp) Reset()         { *m = Sftp{} }
func (m *Sftp) String() string { return proto.CompactTextString(m) }
func (*Sftp) ProtoMessage()    {}
func (*Sftp) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{0}
}
func (m *Sftp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sftp.Unmarshal(m, b)
}
func (m *Sftp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sftp.Marshal(b, m, deterministic)
}
func (dst *Sftp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sftp.Merge(dst, src)
}
func (m *Sftp) XXX_Size() int {
	return xxx_messageInfo_Sftp.Size(m)
}
func (m *Sftp) XXX_DiscardUnknown() {
	xxx_messageInfo_Sftp.DiscardUnknown(m)
}

var xxx_messageInfo_Sftp proto.InternalMessageInfo

func (m *Sftp) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Sftp) GetPassWord() string {
	if m != nil {
		return m.PassWord
	}
	return ""
}

func (m *Sftp) GetSystemId() string {
	if m != nil {
		return m.SystemId
	}
	return ""
}

func (m *Sftp) GetHostKey() string {
	if m != nil {
		return m.HostKey
	}
	return ""
}

func (m *Sftp) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *Sftp) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *Sftp) GetHostPort() string {
	if m != nil {
		return m.HostPort
	}
	return ""
}

func (m *Sftp) GetClientKey() string {
	if m != nil {
		return m.ClientKey
	}
	return ""
}

func (m *Sftp) GetBufferSize() int64 {
	if m != nil {
		return m.BufferSize
	}
	return 0
}

func (m *Sftp) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Sftp) GetDestFileName() string {
	if m != nil {
		return m.DestFileName
	}
	return ""
}

func (m *Sftp) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type SrvPutRequest struct {
	SrceSftp             *Sftp    `protobuf:"bytes,1,opt,name=srceSftp,proto3" json:"srceSftp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvPutRequest) Reset()         { *m = SrvPutRequest{} }
func (m *SrvPutRequest) String() string { return proto.CompactTextString(m) }
func (*SrvPutRequest) ProtoMessage()    {}
func (*SrvPutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{1}
}
func (m *SrvPutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvPutRequest.Unmarshal(m, b)
}
func (m *SrvPutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvPutRequest.Marshal(b, m, deterministic)
}
func (dst *SrvPutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvPutRequest.Merge(dst, src)
}
func (m *SrvPutRequest) XXX_Size() int {
	return xxx_messageInfo_SrvPutRequest.Size(m)
}
func (m *SrvPutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvPutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvPutRequest proto.InternalMessageInfo

func (m *SrvPutRequest) GetSrceSftp() *Sftp {
	if m != nil {
		return m.SrceSftp
	}
	return nil
}

type SrvPutResponse struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	BytesReturned        string   `protobuf:"bytes,2,opt,name=bytesReturned,proto3" json:"bytesReturned,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvPutResponse) Reset()         { *m = SrvPutResponse{} }
func (m *SrvPutResponse) String() string { return proto.CompactTextString(m) }
func (*SrvPutResponse) ProtoMessage()    {}
func (*SrvPutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{2}
}
func (m *SrvPutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvPutResponse.Unmarshal(m, b)
}
func (m *SrvPutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvPutResponse.Marshal(b, m, deterministic)
}
func (dst *SrvPutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvPutResponse.Merge(dst, src)
}
func (m *SrvPutResponse) XXX_Size() int {
	return xxx_messageInfo_SrvPutResponse.Size(m)
}
func (m *SrvPutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvPutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SrvPutResponse proto.InternalMessageInfo

func (m *SrvPutResponse) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *SrvPutResponse) GetBytesReturned() string {
	if m != nil {
		return m.BytesReturned
	}
	return ""
}

func (m *SrvPutResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type SrvGetRequest struct {
	SrceSftp             *Sftp    `protobuf:"bytes,1,opt,name=srceSftp,proto3" json:"srceSftp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvGetRequest) Reset()         { *m = SrvGetRequest{} }
func (m *SrvGetRequest) String() string { return proto.CompactTextString(m) }
func (*SrvGetRequest) ProtoMessage()    {}
func (*SrvGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{3}
}
func (m *SrvGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvGetRequest.Unmarshal(m, b)
}
func (m *SrvGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvGetRequest.Marshal(b, m, deterministic)
}
func (dst *SrvGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvGetRequest.Merge(dst, src)
}
func (m *SrvGetRequest) XXX_Size() int {
	return xxx_messageInfo_SrvGetRequest.Size(m)
}
func (m *SrvGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvGetRequest proto.InternalMessageInfo

func (m *SrvGetRequest) GetSrceSftp() *Sftp {
	if m != nil {
		return m.SrceSftp
	}
	return nil
}

type SrvGetResponse struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	BytesReturned        string   `protobuf:"bytes,2,opt,name=bytesReturned,proto3" json:"bytesReturned,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvGetResponse) Reset()         { *m = SrvGetResponse{} }
func (m *SrvGetResponse) String() string { return proto.CompactTextString(m) }
func (*SrvGetResponse) ProtoMessage()    {}
func (*SrvGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{4}
}
func (m *SrvGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvGetResponse.Unmarshal(m, b)
}
func (m *SrvGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvGetResponse.Marshal(b, m, deterministic)
}
func (dst *SrvGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvGetResponse.Merge(dst, src)
}
func (m *SrvGetResponse) XXX_Size() int {
	return xxx_messageInfo_SrvGetResponse.Size(m)
}
func (m *SrvGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SrvGetResponse proto.InternalMessageInfo

func (m *SrvGetResponse) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *SrvGetResponse) GetBytesReturned() string {
	if m != nil {
		return m.BytesReturned
	}
	return ""
}

func (m *SrvGetResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type SrvMkdirsRequest struct {
	SrceSftp             *Sftp    `protobuf:"bytes,1,opt,name=srceSftp,proto3" json:"srceSftp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvMkdirsRequest) Reset()         { *m = SrvMkdirsRequest{} }
func (m *SrvMkdirsRequest) String() string { return proto.CompactTextString(m) }
func (*SrvMkdirsRequest) ProtoMessage()    {}
func (*SrvMkdirsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{5}
}
func (m *SrvMkdirsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvMkdirsRequest.Unmarshal(m, b)
}
func (m *SrvMkdirsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvMkdirsRequest.Marshal(b, m, deterministic)
}
func (dst *SrvMkdirsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvMkdirsRequest.Merge(dst, src)
}
func (m *SrvMkdirsRequest) XXX_Size() int {
	return xxx_messageInfo_SrvMkdirsRequest.Size(m)
}
func (m *SrvMkdirsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvMkdirsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvMkdirsRequest proto.InternalMessageInfo

func (m *SrvMkdirsRequest) GetSrceSftp() *Sftp {
	if m != nil {
		return m.SrceSftp
	}
	return nil
}

type SrvMkdirsResponse struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvMkdirsResponse) Reset()         { *m = SrvMkdirsResponse{} }
func (m *SrvMkdirsResponse) String() string { return proto.CompactTextString(m) }
func (*SrvMkdirsResponse) ProtoMessage()    {}
func (*SrvMkdirsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{6}
}
func (m *SrvMkdirsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvMkdirsResponse.Unmarshal(m, b)
}
func (m *SrvMkdirsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvMkdirsResponse.Marshal(b, m, deterministic)
}
func (dst *SrvMkdirsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvMkdirsResponse.Merge(dst, src)
}
func (m *SrvMkdirsResponse) XXX_Size() int {
	return xxx_messageInfo_SrvMkdirsResponse.Size(m)
}
func (m *SrvMkdirsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvMkdirsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SrvMkdirsResponse proto.InternalMessageInfo

func (m *SrvMkdirsResponse) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *SrvMkdirsResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type SrvRemoveRequest struct {
	SrceSftp             *Sftp    `protobuf:"bytes,1,opt,name=srceSftp,proto3" json:"srceSftp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvRemoveRequest) Reset()         { *m = SrvRemoveRequest{} }
func (m *SrvRemoveRequest) String() string { return proto.CompactTextString(m) }
func (*SrvRemoveRequest) ProtoMessage()    {}
func (*SrvRemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{7}
}
func (m *SrvRemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvRemoveRequest.Unmarshal(m, b)
}
func (m *SrvRemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvRemoveRequest.Marshal(b, m, deterministic)
}
func (dst *SrvRemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvRemoveRequest.Merge(dst, src)
}
func (m *SrvRemoveRequest) XXX_Size() int {
	return xxx_messageInfo_SrvRemoveRequest.Size(m)
}
func (m *SrvRemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvRemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvRemoveRequest proto.InternalMessageInfo

func (m *SrvRemoveRequest) GetSrceSftp() *Sftp {
	if m != nil {
		return m.SrceSftp
	}
	return nil
}

type SrvRemoveResponse struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvRemoveResponse) Reset()         { *m = SrvRemoveResponse{} }
func (m *SrvRemoveResponse) String() string { return proto.CompactTextString(m) }
func (*SrvRemoveResponse) ProtoMessage()    {}
func (*SrvRemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{8}
}
func (m *SrvRemoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvRemoveResponse.Unmarshal(m, b)
}
func (m *SrvRemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvRemoveResponse.Marshal(b, m, deterministic)
}
func (dst *SrvRemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvRemoveResponse.Merge(dst, src)
}
func (m *SrvRemoveResponse) XXX_Size() int {
	return xxx_messageInfo_SrvRemoveResponse.Size(m)
}
func (m *SrvRemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvRemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SrvRemoveResponse proto.InternalMessageInfo

func (m *SrvRemoveResponse) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *SrvRemoveResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type AuthenticateToRemoteRequest struct {
	Auth                 *Sftp    `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticateToRemoteRequest) Reset()         { *m = AuthenticateToRemoteRequest{} }
func (m *AuthenticateToRemoteRequest) String() string { return proto.CompactTextString(m) }
func (*AuthenticateToRemoteRequest) ProtoMessage()    {}
func (*AuthenticateToRemoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{9}
}
func (m *AuthenticateToRemoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticateToRemoteRequest.Unmarshal(m, b)
}
func (m *AuthenticateToRemoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticateToRemoteRequest.Marshal(b, m, deterministic)
}
func (dst *AuthenticateToRemoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateToRemoteRequest.Merge(dst, src)
}
func (m *AuthenticateToRemoteRequest) XXX_Size() int {
	return xxx_messageInfo_AuthenticateToRemoteRequest.Size(m)
}
func (m *AuthenticateToRemoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateToRemoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateToRemoteRequest proto.InternalMessageInfo

func (m *AuthenticateToRemoteRequest) GetAuth() *Sftp {
	if m != nil {
		return m.Auth
	}
	return nil
}

type AuthenticateToRemoteResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticateToRemoteResponse) Reset()         { *m = AuthenticateToRemoteResponse{} }
func (m *AuthenticateToRemoteResponse) String() string { return proto.CompactTextString(m) }
func (*AuthenticateToRemoteResponse) ProtoMessage()    {}
func (*AuthenticateToRemoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{10}
}
func (m *AuthenticateToRemoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticateToRemoteResponse.Unmarshal(m, b)
}
func (m *AuthenticateToRemoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticateToRemoteResponse.Marshal(b, m, deterministic)
}
func (dst *AuthenticateToRemoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateToRemoteResponse.Merge(dst, src)
}
func (m *AuthenticateToRemoteResponse) XXX_Size() int {
	return xxx_messageInfo_AuthenticateToRemoteResponse.Size(m)
}
func (m *AuthenticateToRemoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateToRemoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateToRemoteResponse proto.InternalMessageInfo

func (m *AuthenticateToRemoteResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type SrvStatRequest struct {
	SrceSftp             *Sftp    `protobuf:"bytes,1,opt,name=srceSftp,proto3" json:"srceSftp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvStatRequest) Reset()         { *m = SrvStatRequest{} }
func (m *SrvStatRequest) String() string { return proto.CompactTextString(m) }
func (*SrvStatRequest) ProtoMessage()    {}
func (*SrvStatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{11}
}
func (m *SrvStatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvStatRequest.Unmarshal(m, b)
}
func (m *SrvStatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvStatRequest.Marshal(b, m, deterministic)
}
func (dst *SrvStatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvStatRequest.Merge(dst, src)
}
func (m *SrvStatRequest) XXX_Size() int {
	return xxx_messageInfo_SrvStatRequest.Size(m)
}
func (m *SrvStatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvStatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvStatRequest proto.InternalMessageInfo

func (m *SrvStatRequest) GetSrceSftp() *Sftp {
	if m != nil {
		return m.SrceSftp
	}
	return nil
}

type SrvStatResponse struct {
	FileName             string   `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	Mode                 string   `protobuf:"bytes,3,opt,name=Mode,proto3" json:"Mode,omitempty"`
	LastUpdated          int64    `protobuf:"varint,4,opt,name=LastUpdated,proto3" json:"LastUpdated,omitempty"`
	IsDirectory          bool     `protobuf:"varint,5,opt,name=IsDirectory,proto3" json:"IsDirectory,omitempty"`
	IsLink               bool     `protobuf:"varint,6,opt,name=IsLink,proto3" json:"IsLink,omitempty"`
	Error                string   `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvStatResponse) Reset()         { *m = SrvStatResponse{} }
func (m *SrvStatResponse) String() string { return proto.CompactTextString(m) }
func (*SrvStatResponse) ProtoMessage()    {}
func (*SrvStatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_3755e61859a946f1, []int{12}
}
func (m *SrvStatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvStatResponse.Unmarshal(m, b)
}
func (m *SrvStatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvStatResponse.Marshal(b, m, deterministic)
}
func (dst *SrvStatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvStatResponse.Merge(dst, src)
}
func (m *SrvStatResponse) XXX_Size() int {
	return xxx_messageInfo_SrvStatResponse.Size(m)
}
func (m *SrvStatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvStatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SrvStatResponse proto.InternalMessageInfo

func (m *SrvStatResponse) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *SrvStatResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *SrvStatResponse) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *SrvStatResponse) GetLastUpdated() int64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *SrvStatResponse) GetIsDirectory() bool {
	if m != nil {
		return m.IsDirectory
	}
	return false
}

func (m *SrvStatResponse) GetIsLink() bool {
	if m != nil {
		return m.IsLink
	}
	return false
}

func (m *SrvStatResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*Sftp)(nil), "sftpproto.Sftp")
	proto.RegisterType((*SrvPutRequest)(nil), "sftpproto.SrvPutRequest")
	proto.RegisterType((*SrvPutResponse)(nil), "sftpproto.SrvPutResponse")
	proto.RegisterType((*SrvGetRequest)(nil), "sftpproto.SrvGetRequest")
	proto.RegisterType((*SrvGetResponse)(nil), "sftpproto.SrvGetResponse")
	proto.RegisterType((*SrvMkdirsRequest)(nil), "sftpproto.SrvMkdirsRequest")
	proto.RegisterType((*SrvMkdirsResponse)(nil), "sftpproto.SrvMkdirsResponse")
	proto.RegisterType((*SrvRemoveRequest)(nil), "sftpproto.SrvRemoveRequest")
	proto.RegisterType((*SrvRemoveResponse)(nil), "sftpproto.SrvRemoveResponse")
	proto.RegisterType((*AuthenticateToRemoteRequest)(nil), "sftpproto.AuthenticateToRemoteRequest")
	proto.RegisterType((*AuthenticateToRemoteResponse)(nil), "sftpproto.AuthenticateToRemoteResponse")
	proto.RegisterType((*SrvStatRequest)(nil), "sftpproto.SrvStatRequest")
	proto.RegisterType((*SrvStatResponse)(nil), "sftpproto.SrvStatResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SftpRelayClient is the client API for SftpRelay service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SftpRelayClient interface {
	Get(ctx context.Context, in *SrvGetRequest, opts ...grpc.CallOption) (*SrvGetResponse, error)
	Put(ctx context.Context, in *SrvPutRequest, opts ...grpc.CallOption) (*SrvPutResponse, error)
	Mkdirs(ctx context.Context, in *SrvMkdirsRequest, opts ...grpc.CallOption) (*SrvMkdirsResponse, error)
	Remove(ctx context.Context, in *SrvRemoveRequest, opts ...grpc.CallOption) (*SrvRemoveResponse, error)
	Authenticate(ctx context.Context, in *AuthenticateToRemoteRequest, opts ...grpc.CallOption) (*AuthenticateToRemoteResponse, error)
	Stat(ctx context.Context, in *SrvStatRequest, opts ...grpc.CallOption) (*SrvStatResponse, error)
}

type sftpRelayClient struct {
	cc *grpc.ClientConn
}

func NewSftpRelayClient(cc *grpc.ClientConn) SftpRelayClient {
	return &sftpRelayClient{cc}
}

func (c *sftpRelayClient) Get(ctx context.Context, in *SrvGetRequest, opts ...grpc.CallOption) (*SrvGetResponse, error) {
	out := new(SrvGetResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpRelayClient) Put(ctx context.Context, in *SrvPutRequest, opts ...grpc.CallOption) (*SrvPutResponse, error) {
	out := new(SrvPutResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpRelayClient) Mkdirs(ctx context.Context, in *SrvMkdirsRequest, opts ...grpc.CallOption) (*SrvMkdirsResponse, error) {
	out := new(SrvMkdirsResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/Mkdirs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpRelayClient) Remove(ctx context.Context, in *SrvRemoveRequest, opts ...grpc.CallOption) (*SrvRemoveResponse, error) {
	out := new(SrvRemoveResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpRelayClient) Authenticate(ctx context.Context, in *AuthenticateToRemoteRequest, opts ...grpc.CallOption) (*AuthenticateToRemoteResponse, error) {
	out := new(AuthenticateToRemoteResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpRelayClient) Stat(ctx context.Context, in *SrvStatRequest, opts ...grpc.CallOption) (*SrvStatResponse, error) {
	out := new(SrvStatResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/Stat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SftpRelayServer is the server API for SftpRelay service.
type SftpRelayServer interface {
	Get(context.Context, *SrvGetRequest) (*SrvGetResponse, error)
	Put(context.Context, *SrvPutRequest) (*SrvPutResponse, error)
	Mkdirs(context.Context, *SrvMkdirsRequest) (*SrvMkdirsResponse, error)
	Remove(context.Context, *SrvRemoveRequest) (*SrvRemoveResponse, error)
	Authenticate(context.Context, *AuthenticateToRemoteRequest) (*AuthenticateToRemoteResponse, error)
	Stat(context.Context, *SrvStatRequest) (*SrvStatResponse, error)
}

func RegisterSftpRelayServer(s *grpc.Server, srv SftpRelayServer) {
	s.RegisterService(&_SftpRelay_serviceDesc, srv)
}

func _SftpRelay_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).Get(ctx, req.(*SrvGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SftpRelay_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).Put(ctx, req.(*SrvPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SftpRelay_Mkdirs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvMkdirsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).Mkdirs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/Mkdirs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).Mkdirs(ctx, req.(*SrvMkdirsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SftpRelay_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvRemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).Remove(ctx, req.(*SrvRemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SftpRelay_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticateToRemoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).Authenticate(ctx, req.(*AuthenticateToRemoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SftpRelay_Stat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvStatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).Stat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/Stat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).Stat(ctx, req.(*SrvStatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SftpRelay_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sftpproto.SftpRelay",
	HandlerType: (*SftpRelayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _SftpRelay_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _SftpRelay_Put_Handler,
		},
		{
			MethodName: "Mkdirs",
			Handler:    _SftpRelay_Mkdirs_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _SftpRelay_Remove_Handler,
		},
		{
			MethodName: "Authenticate",
			Handler:    _SftpRelay_Authenticate_Handler,
		},
		{
			MethodName: "Stat",
			Handler:    _SftpRelay_Stat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sftp.proto",
}

func init() { proto.RegisterFile("sftp.proto", fileDescriptor_sftp_3755e61859a946f1) }

var fileDescriptor_sftp_3755e61859a946f1 = []byte{
	// 657 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdb, 0x6e, 0xd3, 0x4c,
	0x10, 0x96, 0x13, 0x37, 0x4d, 0xa6, 0xa7, 0xff, 0x5f, 0x21, 0x64, 0xd2, 0x0a, 0x45, 0xe1, 0x54,
	0x09, 0x29, 0x17, 0xe5, 0xae, 0xa2, 0x42, 0x2d, 0xd0, 0xaa, 0xa2, 0x45, 0x91, 0x03, 0x42, 0xe2,
	0x06, 0xb9, 0xf1, 0xb8, 0xb1, 0x9a, 0x78, 0xcd, 0xee, 0x38, 0x52, 0x78, 0x1c, 0xee, 0x79, 0x0e,
	0x5e, 0x80, 0x07, 0x42, 0xbb, 0xf6, 0xfa, 0xd4, 0x70, 0x50, 0x2b, 0xee, 0x76, 0xe6, 0x9b, 0x6f,
	0xf6, 0xf3, 0x1c, 0xd6, 0x00, 0x32, 0xa0, 0x78, 0x10, 0x0b, 0x4e, 0x9c, 0x75, 0xd4, 0x59, 0x1f,
	0xfb, 0x3f, 0x1a, 0x60, 0x8f, 0x02, 0x8a, 0x59, 0x17, 0xda, 0x89, 0x44, 0x11, 0x79, 0x33, 0x74,
	0xac, 0x9e, 0xb5, 0xdb, 0x71, 0x73, 0x5b, 0x61, 0xb1, 0x27, 0xe5, 0x07, 0x2e, 0x7c, 0xa7, 0x91,
	0x62, 0xc6, 0x56, 0x98, 0x5c, 0x48, 0xc2, 0xd9, 0xa9, 0xef, 0x34, 0x53, 0xcc, 0xd8, 0xcc, 0x81,
	0xd5, 0x09, 0x97, 0xf4, 0x06, 0x17, 0x8e, 0xad, 0x21, 0x63, 0x2a, 0x56, 0x10, 0x4e, 0xf1, 0xad,
	0xba, 0x6d, 0x25, 0x65, 0x19, 0xdb, 0x60, 0xa3, 0xf0, 0x0b, 0x3a, 0xad, 0x9e, 0xb5, 0xdb, 0x74,
	0x73, 0x5b, 0x61, 0x2a, 0xc5, 0x90, 0x0b, 0x72, 0x56, 0x53, 0x9e, 0xb1, 0xd9, 0x0e, 0x74, 0xc6,
	0xd3, 0x10, 0x23, 0x7d, 0x5f, 0x5b, 0x83, 0x85, 0x83, 0xdd, 0x07, 0xb8, 0x48, 0x82, 0x00, 0x85,
	0xce, 0xdb, 0xd1, 0x79, 0x4b, 0x1e, 0xc6, 0xc0, 0xa6, 0x45, 0x8c, 0x0e, 0x68, 0xa2, 0x3e, 0xb3,
	0x3e, 0xac, 0xfb, 0x28, 0xe9, 0xd8, 0x28, 0x5d, 0xd3, 0x58, 0xc5, 0xc7, 0xee, 0xc0, 0x4a, 0xc0,
	0xc5, 0x18, 0x9d, 0xf5, 0x9e, 0xb5, 0xdb, 0x76, 0x53, 0xa3, 0xff, 0x1c, 0x36, 0x46, 0x62, 0x3e,
	0x4c, 0xc8, 0xc5, 0xcf, 0x09, 0x4a, 0x62, 0x4f, 0xa1, 0x2d, 0xc5, 0x18, 0x55, 0xa9, 0x75, 0x79,
	0xd7, 0xf6, 0xb6, 0x06, 0x79, 0x17, 0x06, 0xca, 0xed, 0xe6, 0x01, 0xfd, 0x09, 0x6c, 0x1a, 0xb6,
	0x8c, 0x79, 0x24, 0xb1, 0x52, 0x2f, 0xab, 0x56, 0xaf, 0x87, 0xb0, 0x71, 0xb1, 0x20, 0x94, 0x2e,
	0x52, 0x22, 0x22, 0x34, 0x2d, 0xaa, 0x3a, 0x95, 0x4e, 0x14, 0x82, 0x8b, 0xac, 0x49, 0xa9, 0x91,
	0xe9, 0x3c, 0xc1, 0xdb, 0xe8, 0xd4, 0xec, 0x7f, 0xac, 0xf3, 0x05, 0xfc, 0x37, 0x12, 0xf3, 0xf3,
	0x2b, 0x3f, 0x14, 0xf2, 0x46, 0x52, 0x5f, 0xc3, 0xff, 0xa5, 0x04, 0x7f, 0xa1, 0x36, 0xd7, 0xd1,
	0xb8, 0xae, 0xc3, 0xc5, 0x19, 0x9f, 0xe3, 0x2d, 0x74, 0x98, 0x04, 0x37, 0xd6, 0x71, 0x04, 0xdb,
	0x87, 0x09, 0x4d, 0x30, 0xa2, 0x70, 0xec, 0x11, 0xbe, 0xe3, 0x2a, 0x23, 0xe5, 0x92, 0x1e, 0x80,
	0xed, 0x25, 0x34, 0xf9, 0x95, 0x1c, 0x0d, 0xf6, 0xf7, 0x61, 0x67, 0x79, 0x8e, 0x42, 0x95, 0xc8,
	0xce, 0x46, 0x95, 0xb1, 0xfb, 0x07, 0xba, 0xf3, 0x23, 0xf2, 0x6e, 0x36, 0x38, 0xdf, 0x2d, 0xd8,
	0xca, 0xf9, 0xc5, 0x75, 0xc7, 0xb5, 0x22, 0xe4, 0x4b, 0xc6, 0xc0, 0xd6, 0x6b, 0xdb, 0xd0, 0x6b,
	0x6b, 0x9b, 0x85, 0x3d, 0xe7, 0x3e, 0x66, 0x73, 0xa2, 0xcf, 0xac, 0x07, 0x6b, 0x67, 0x9e, 0xa4,
	0xf7, 0xb1, 0xef, 0x11, 0xfa, 0xfa, 0xd1, 0x69, 0xba, 0x65, 0x97, 0x8a, 0x38, 0x95, 0xaf, 0x42,
	0x81, 0x63, 0xe2, 0x62, 0xa1, 0xdf, 0x9e, 0xb6, 0x5b, 0x76, 0xb1, 0xbb, 0xd0, 0x3a, 0x95, 0x67,
	0x61, 0x74, 0xa5, 0x1f, 0x9f, 0xb6, 0x9b, 0x59, 0x45, 0x23, 0x56, 0x4b, 0x8d, 0xd8, 0xfb, 0xd6,
	0x84, 0x8e, 0xfe, 0x38, 0x9c, 0x7a, 0x0b, 0xb6, 0x0f, 0xcd, 0x13, 0x24, 0xe6, 0x94, 0xbf, 0xbc,
	0xbc, 0x5e, 0xdd, 0x7b, 0x4b, 0x90, 0xec, 0xfb, 0xf7, 0xa1, 0x39, 0x4c, 0xae, 0x71, 0x8b, 0x27,
	0xa4, 0xce, 0x2d, 0x3f, 0x0f, 0x2f, 0xa1, 0x95, 0x8e, 0x36, 0xdb, 0xae, 0x06, 0x55, 0x36, 0xa6,
	0xbb, 0xb3, 0x1c, 0x2c, 0x92, 0xa4, 0x73, 0x59, 0x4f, 0x52, 0x19, 0xf7, 0x7a, 0x92, 0xda, 0x28,
	0x7f, 0x82, 0xf5, 0xf2, 0x50, 0xb1, 0xc7, 0xa5, 0xe8, 0xdf, 0x4c, 0x6c, 0xf7, 0xc9, 0x1f, 0xe3,
	0xb2, 0x0b, 0x0e, 0xc0, 0x56, 0x63, 0xc3, 0x6a, 0xd5, 0x28, 0x8d, 0x62, 0xb7, 0xbb, 0x0c, 0x4a,
	0xe9, 0x47, 0x43, 0x78, 0xc4, 0xc5, 0xe5, 0xc0, 0xbb, 0xf4, 0xe6, 0x18, 0x4f, 0x3d, 0x0a, 0xb8,
	0x98, 0x0d, 0x48, 0x78, 0x91, 0x0c, 0x50, 0xa4, 0xbf, 0x47, 0xcd, 0x3e, 0xda, 0x3c, 0x54, 0x21,
	0xaa, 0xb5, 0x43, 0xe5, 0x1c, 0x5a, 0x1f, 0x8b, 0xbf, 0xe6, 0xd7, 0x46, 0x27, 0x47, 0x2f, 0x5a,
	0xda, 0xf5, 0xec, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0a, 0xdc, 0x90, 0x38, 0x61, 0x07, 0x00,
	0x00,
}
