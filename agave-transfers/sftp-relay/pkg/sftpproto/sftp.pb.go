// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sftp.proto

package sftpproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// General message objects
type RemoteSystemConfig struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	PublicKey            string   `protobuf:"bytes,5,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	PrivateKey           string   `protobuf:"bytes,6,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteSystemConfig) Reset()         { *m = RemoteSystemConfig{} }
func (m *RemoteSystemConfig) String() string { return proto.CompactTextString(m) }
func (*RemoteSystemConfig) ProtoMessage()    {}
func (*RemoteSystemConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{0}
}
func (m *RemoteSystemConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteSystemConfig.Unmarshal(m, b)
}
func (m *RemoteSystemConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteSystemConfig.Marshal(b, m, deterministic)
}
func (dst *RemoteSystemConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteSystemConfig.Merge(dst, src)
}
func (m *RemoteSystemConfig) XXX_Size() int {
	return xxx_messageInfo_RemoteSystemConfig.Size(m)
}
func (m *RemoteSystemConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteSystemConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteSystemConfig proto.InternalMessageInfo

func (m *RemoteSystemConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *RemoteSystemConfig) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *RemoteSystemConfig) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RemoteSystemConfig) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RemoteSystemConfig) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *RemoteSystemConfig) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

type RemoteFileInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Size                 int64    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Mode                 string   `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	LastUpdated          int64    `protobuf:"varint,5,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	IsDirectory          bool     `protobuf:"varint,6,opt,name=isDirectory,proto3" json:"isDirectory,omitempty"`
	IsLink               bool     `protobuf:"varint,7,opt,name=isLink,proto3" json:"isLink,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteFileInfo) Reset()         { *m = RemoteFileInfo{} }
func (m *RemoteFileInfo) String() string { return proto.CompactTextString(m) }
func (*RemoteFileInfo) ProtoMessage()    {}
func (*RemoteFileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{1}
}
func (m *RemoteFileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteFileInfo.Unmarshal(m, b)
}
func (m *RemoteFileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteFileInfo.Marshal(b, m, deterministic)
}
func (dst *RemoteFileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteFileInfo.Merge(dst, src)
}
func (m *RemoteFileInfo) XXX_Size() int {
	return xxx_messageInfo_RemoteFileInfo.Size(m)
}
func (m *RemoteFileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteFileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteFileInfo proto.InternalMessageInfo

func (m *RemoteFileInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RemoteFileInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RemoteFileInfo) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *RemoteFileInfo) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *RemoteFileInfo) GetLastUpdated() int64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *RemoteFileInfo) GetIsDirectory() bool {
	if m != nil {
		return m.IsDirectory
	}
	return false
}

func (m *RemoteFileInfo) GetIsLink() bool {
	if m != nil {
		return m.IsLink
	}
	return false
}

type RemoteDataError struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteDataError) Reset()         { *m = RemoteDataError{} }
func (m *RemoteDataError) String() string { return proto.CompactTextString(m) }
func (*RemoteDataError) ProtoMessage()    {}
func (*RemoteDataError) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{2}
}
func (m *RemoteDataError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteDataError.Unmarshal(m, b)
}
func (m *RemoteDataError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteDataError.Marshal(b, m, deterministic)
}
func (dst *RemoteDataError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteDataError.Merge(dst, src)
}
func (m *RemoteDataError) XXX_Size() int {
	return xxx_messageInfo_RemoteDataError.Size(m)
}
func (m *RemoteDataError) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteDataError.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteDataError proto.InternalMessageInfo

func (m *RemoteDataError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RemoteDataError) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

// Common request objects
type SrvPutRequest struct {
	SystemConfig         *RemoteSystemConfig `protobuf:"bytes,1,opt,name=systemConfig,proto3" json:"systemConfig,omitempty"`
	RemotePath           string              `protobuf:"bytes,2,opt,name=remotePath,proto3" json:"remotePath,omitempty"`
	LocalPath            string              `protobuf:"bytes,3,opt,name=localPath,proto3" json:"localPath,omitempty"`
	Force                bool                `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	Range                string              `protobuf:"bytes,5,opt,name=range,proto3" json:"range,omitempty"`
	Append               bool                `protobuf:"varint,6,opt,name=append,proto3" json:"append,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SrvPutRequest) Reset()         { *m = SrvPutRequest{} }
func (m *SrvPutRequest) String() string { return proto.CompactTextString(m) }
func (*SrvPutRequest) ProtoMessage()    {}
func (*SrvPutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{3}
}
func (m *SrvPutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvPutRequest.Unmarshal(m, b)
}
func (m *SrvPutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvPutRequest.Marshal(b, m, deterministic)
}
func (dst *SrvPutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvPutRequest.Merge(dst, src)
}
func (m *SrvPutRequest) XXX_Size() int {
	return xxx_messageInfo_SrvPutRequest.Size(m)
}
func (m *SrvPutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvPutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvPutRequest proto.InternalMessageInfo

func (m *SrvPutRequest) GetSystemConfig() *RemoteSystemConfig {
	if m != nil {
		return m.SystemConfig
	}
	return nil
}

func (m *SrvPutRequest) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

func (m *SrvPutRequest) GetLocalPath() string {
	if m != nil {
		return m.LocalPath
	}
	return ""
}

func (m *SrvPutRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *SrvPutRequest) GetRange() string {
	if m != nil {
		return m.Range
	}
	return ""
}

func (m *SrvPutRequest) GetAppend() bool {
	if m != nil {
		return m.Append
	}
	return false
}

type SrvGetRequest struct {
	SystemConfig         *RemoteSystemConfig `protobuf:"bytes,1,opt,name=systemConfig,proto3" json:"systemConfig,omitempty"`
	RemotePath           string              `protobuf:"bytes,2,opt,name=remotePath,proto3" json:"remotePath,omitempty"`
	LocalPath            string              `protobuf:"bytes,3,opt,name=localPath,proto3" json:"localPath,omitempty"`
	Force                bool                `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	Range                string              `protobuf:"bytes,5,opt,name=range,proto3" json:"range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SrvGetRequest) Reset()         { *m = SrvGetRequest{} }
func (m *SrvGetRequest) String() string { return proto.CompactTextString(m) }
func (*SrvGetRequest) ProtoMessage()    {}
func (*SrvGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{4}
}
func (m *SrvGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvGetRequest.Unmarshal(m, b)
}
func (m *SrvGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvGetRequest.Marshal(b, m, deterministic)
}
func (dst *SrvGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvGetRequest.Merge(dst, src)
}
func (m *SrvGetRequest) XXX_Size() int {
	return xxx_messageInfo_SrvGetRequest.Size(m)
}
func (m *SrvGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvGetRequest proto.InternalMessageInfo

func (m *SrvGetRequest) GetSystemConfig() *RemoteSystemConfig {
	if m != nil {
		return m.SystemConfig
	}
	return nil
}

func (m *SrvGetRequest) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

func (m *SrvGetRequest) GetLocalPath() string {
	if m != nil {
		return m.LocalPath
	}
	return ""
}

func (m *SrvGetRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *SrvGetRequest) GetRange() string {
	if m != nil {
		return m.Range
	}
	return ""
}

type SrvListRequest struct {
	SystemConfig         *RemoteSystemConfig `protobuf:"bytes,1,opt,name=systemConfig,proto3" json:"systemConfig,omitempty"`
	RemotePath           string              `protobuf:"bytes,2,opt,name=remotePath,proto3" json:"remotePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SrvListRequest) Reset()         { *m = SrvListRequest{} }
func (m *SrvListRequest) String() string { return proto.CompactTextString(m) }
func (*SrvListRequest) ProtoMessage()    {}
func (*SrvListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{5}
}
func (m *SrvListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvListRequest.Unmarshal(m, b)
}
func (m *SrvListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvListRequest.Marshal(b, m, deterministic)
}
func (dst *SrvListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvListRequest.Merge(dst, src)
}
func (m *SrvListRequest) XXX_Size() int {
	return xxx_messageInfo_SrvListRequest.Size(m)
}
func (m *SrvListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvListRequest proto.InternalMessageInfo

func (m *SrvListRequest) GetSystemConfig() *RemoteSystemConfig {
	if m != nil {
		return m.SystemConfig
	}
	return nil
}

func (m *SrvListRequest) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

type SrvMkdirRequest struct {
	SystemConfig         *RemoteSystemConfig `protobuf:"bytes,1,opt,name=systemConfig,proto3" json:"systemConfig,omitempty"`
	RemotePath           string              `protobuf:"bytes,2,opt,name=remotePath,proto3" json:"remotePath,omitempty"`
	Recursive            bool                `protobuf:"varint,3,opt,name=recursive,proto3" json:"recursive,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SrvMkdirRequest) Reset()         { *m = SrvMkdirRequest{} }
func (m *SrvMkdirRequest) String() string { return proto.CompactTextString(m) }
func (*SrvMkdirRequest) ProtoMessage()    {}
func (*SrvMkdirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{6}
}
func (m *SrvMkdirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvMkdirRequest.Unmarshal(m, b)
}
func (m *SrvMkdirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvMkdirRequest.Marshal(b, m, deterministic)
}
func (dst *SrvMkdirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvMkdirRequest.Merge(dst, src)
}
func (m *SrvMkdirRequest) XXX_Size() int {
	return xxx_messageInfo_SrvMkdirRequest.Size(m)
}
func (m *SrvMkdirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvMkdirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvMkdirRequest proto.InternalMessageInfo

func (m *SrvMkdirRequest) GetSystemConfig() *RemoteSystemConfig {
	if m != nil {
		return m.SystemConfig
	}
	return nil
}

func (m *SrvMkdirRequest) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

func (m *SrvMkdirRequest) GetRecursive() bool {
	if m != nil {
		return m.Recursive
	}
	return false
}

type SrvRemoveRequest struct {
	SystemConfig         *RemoteSystemConfig `protobuf:"bytes,1,opt,name=systemConfig,proto3" json:"systemConfig,omitempty"`
	RemotePath           string              `protobuf:"bytes,2,opt,name=remotePath,proto3" json:"remotePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SrvRemoveRequest) Reset()         { *m = SrvRemoveRequest{} }
func (m *SrvRemoveRequest) String() string { return proto.CompactTextString(m) }
func (*SrvRemoveRequest) ProtoMessage()    {}
func (*SrvRemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{7}
}
func (m *SrvRemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvRemoveRequest.Unmarshal(m, b)
}
func (m *SrvRemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvRemoveRequest.Marshal(b, m, deterministic)
}
func (dst *SrvRemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvRemoveRequest.Merge(dst, src)
}
func (m *SrvRemoveRequest) XXX_Size() int {
	return xxx_messageInfo_SrvRemoveRequest.Size(m)
}
func (m *SrvRemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvRemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvRemoveRequest proto.InternalMessageInfo

func (m *SrvRemoveRequest) GetSystemConfig() *RemoteSystemConfig {
	if m != nil {
		return m.SystemConfig
	}
	return nil
}

func (m *SrvRemoveRequest) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

type SrvCopyRequest struct {
	SystemConfig         *RemoteSystemConfig `protobuf:"bytes,1,opt,name=systemConfig,proto3" json:"systemConfig,omitempty"`
	RemotePath           string              `protobuf:"bytes,2,opt,name=remotePath,proto3" json:"remotePath,omitempty"`
	LocalPath            string              `protobuf:"bytes,3,opt,name=localPath,proto3" json:"localPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SrvCopyRequest) Reset()         { *m = SrvCopyRequest{} }
func (m *SrvCopyRequest) String() string { return proto.CompactTextString(m) }
func (*SrvCopyRequest) ProtoMessage()    {}
func (*SrvCopyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{8}
}
func (m *SrvCopyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvCopyRequest.Unmarshal(m, b)
}
func (m *SrvCopyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvCopyRequest.Marshal(b, m, deterministic)
}
func (dst *SrvCopyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvCopyRequest.Merge(dst, src)
}
func (m *SrvCopyRequest) XXX_Size() int {
	return xxx_messageInfo_SrvCopyRequest.Size(m)
}
func (m *SrvCopyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvCopyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvCopyRequest proto.InternalMessageInfo

func (m *SrvCopyRequest) GetSystemConfig() *RemoteSystemConfig {
	if m != nil {
		return m.SystemConfig
	}
	return nil
}

func (m *SrvCopyRequest) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

func (m *SrvCopyRequest) GetLocalPath() string {
	if m != nil {
		return m.LocalPath
	}
	return ""
}

type SrvRenameRequest struct {
	SystemConfig         *RemoteSystemConfig `protobuf:"bytes,1,opt,name=systemConfig,proto3" json:"systemConfig,omitempty"`
	RemotePath           string              `protobuf:"bytes,2,opt,name=remotePath,proto3" json:"remotePath,omitempty"`
	NewName              string              `protobuf:"bytes,3,opt,name=newName,proto3" json:"newName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SrvRenameRequest) Reset()         { *m = SrvRenameRequest{} }
func (m *SrvRenameRequest) String() string { return proto.CompactTextString(m) }
func (*SrvRenameRequest) ProtoMessage()    {}
func (*SrvRenameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{9}
}
func (m *SrvRenameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvRenameRequest.Unmarshal(m, b)
}
func (m *SrvRenameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvRenameRequest.Marshal(b, m, deterministic)
}
func (dst *SrvRenameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvRenameRequest.Merge(dst, src)
}
func (m *SrvRenameRequest) XXX_Size() int {
	return xxx_messageInfo_SrvRenameRequest.Size(m)
}
func (m *SrvRenameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvRenameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvRenameRequest proto.InternalMessageInfo

func (m *SrvRenameRequest) GetSystemConfig() *RemoteSystemConfig {
	if m != nil {
		return m.SystemConfig
	}
	return nil
}

func (m *SrvRenameRequest) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

func (m *SrvRenameRequest) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

type SrvMoveRequest struct {
	SystemConfig         *RemoteSystemConfig `protobuf:"bytes,1,opt,name=systemConfig,proto3" json:"systemConfig,omitempty"`
	RemotePath           string              `protobuf:"bytes,2,opt,name=remotePath,proto3" json:"remotePath,omitempty"`
	NewPath              string              `protobuf:"bytes,3,opt,name=newPath,proto3" json:"newPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SrvMoveRequest) Reset()         { *m = SrvMoveRequest{} }
func (m *SrvMoveRequest) String() string { return proto.CompactTextString(m) }
func (*SrvMoveRequest) ProtoMessage()    {}
func (*SrvMoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{10}
}
func (m *SrvMoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvMoveRequest.Unmarshal(m, b)
}
func (m *SrvMoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvMoveRequest.Marshal(b, m, deterministic)
}
func (dst *SrvMoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvMoveRequest.Merge(dst, src)
}
func (m *SrvMoveRequest) XXX_Size() int {
	return xxx_messageInfo_SrvMoveRequest.Size(m)
}
func (m *SrvMoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvMoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvMoveRequest proto.InternalMessageInfo

func (m *SrvMoveRequest) GetSystemConfig() *RemoteSystemConfig {
	if m != nil {
		return m.SystemConfig
	}
	return nil
}

func (m *SrvMoveRequest) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

func (m *SrvMoveRequest) GetNewPath() string {
	if m != nil {
		return m.NewPath
	}
	return ""
}

type SrvStatRequest struct {
	SystemConfig         *RemoteSystemConfig `protobuf:"bytes,1,opt,name=systemConfig,proto3" json:"systemConfig,omitempty"`
	RemotePath           string              `protobuf:"bytes,2,opt,name=remotePath,proto3" json:"remotePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SrvStatRequest) Reset()         { *m = SrvStatRequest{} }
func (m *SrvStatRequest) String() string { return proto.CompactTextString(m) }
func (*SrvStatRequest) ProtoMessage()    {}
func (*SrvStatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{11}
}
func (m *SrvStatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvStatRequest.Unmarshal(m, b)
}
func (m *SrvStatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvStatRequest.Marshal(b, m, deterministic)
}
func (dst *SrvStatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvStatRequest.Merge(dst, src)
}
func (m *SrvStatRequest) XXX_Size() int {
	return xxx_messageInfo_SrvStatRequest.Size(m)
}
func (m *SrvStatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvStatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SrvStatRequest proto.InternalMessageInfo

func (m *SrvStatRequest) GetSystemConfig() *RemoteSystemConfig {
	if m != nil {
		return m.SystemConfig
	}
	return nil
}

func (m *SrvStatRequest) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

type AuthenticationCheckRequest struct {
	SystemConfig         *RemoteSystemConfig `protobuf:"bytes,1,opt,name=systemConfig,proto3" json:"systemConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AuthenticationCheckRequest) Reset()         { *m = AuthenticationCheckRequest{} }
func (m *AuthenticationCheckRequest) String() string { return proto.CompactTextString(m) }
func (*AuthenticationCheckRequest) ProtoMessage()    {}
func (*AuthenticationCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{12}
}
func (m *AuthenticationCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticationCheckRequest.Unmarshal(m, b)
}
func (m *AuthenticationCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticationCheckRequest.Marshal(b, m, deterministic)
}
func (dst *AuthenticationCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticationCheckRequest.Merge(dst, src)
}
func (m *AuthenticationCheckRequest) XXX_Size() int {
	return xxx_messageInfo_AuthenticationCheckRequest.Size(m)
}
func (m *AuthenticationCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticationCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticationCheckRequest proto.InternalMessageInfo

func (m *AuthenticationCheckRequest) GetSystemConfig() *RemoteSystemConfig {
	if m != nil {
		return m.SystemConfig
	}
	return nil
}

// Common response objects
type EmptyResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{13}
}
func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (dst *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(dst, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

func (m *EmptyResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type TransferResponse struct {
	RemoteFileInfo       *RemoteFileInfo `protobuf:"bytes,1,opt,name=remoteFileInfo,proto3" json:"remoteFileInfo,omitempty"`
	BytesTransferred     int64           `protobuf:"varint,2,opt,name=bytesTransferred,proto3" json:"bytesTransferred,omitempty"`
	Error                string          `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TransferResponse) Reset()         { *m = TransferResponse{} }
func (m *TransferResponse) String() string { return proto.CompactTextString(m) }
func (*TransferResponse) ProtoMessage()    {}
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{14}
}
func (m *TransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferResponse.Unmarshal(m, b)
}
func (m *TransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferResponse.Marshal(b, m, deterministic)
}
func (dst *TransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferResponse.Merge(dst, src)
}
func (m *TransferResponse) XXX_Size() int {
	return xxx_messageInfo_TransferResponse.Size(m)
}
func (m *TransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransferResponse proto.InternalMessageInfo

func (m *TransferResponse) GetRemoteFileInfo() *RemoteFileInfo {
	if m != nil {
		return m.RemoteFileInfo
	}
	return nil
}

func (m *TransferResponse) GetBytesTransferred() int64 {
	if m != nil {
		return m.BytesTransferred
	}
	return 0
}

func (m *TransferResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type FileInfoResponse struct {
	RemoteFileInfo       *RemoteFileInfo `protobuf:"bytes,1,opt,name=remoteFileInfo,proto3" json:"remoteFileInfo,omitempty"`
	Error                string          `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FileInfoResponse) Reset()         { *m = FileInfoResponse{} }
func (m *FileInfoResponse) String() string { return proto.CompactTextString(m) }
func (*FileInfoResponse) ProtoMessage()    {}
func (*FileInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{15}
}
func (m *FileInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfoResponse.Unmarshal(m, b)
}
func (m *FileInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfoResponse.Marshal(b, m, deterministic)
}
func (dst *FileInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfoResponse.Merge(dst, src)
}
func (m *FileInfoResponse) XXX_Size() int {
	return xxx_messageInfo_FileInfoResponse.Size(m)
}
func (m *FileInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfoResponse proto.InternalMessageInfo

func (m *FileInfoResponse) GetRemoteFileInfo() *RemoteFileInfo {
	if m != nil {
		return m.RemoteFileInfo
	}
	return nil
}

func (m *FileInfoResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type FileInfoListResponse struct {
	Listing              []*RemoteFileInfo `protobuf:"bytes,1,rep,name=listing,proto3" json:"listing,omitempty"`
	Error                string            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FileInfoListResponse) Reset()         { *m = FileInfoListResponse{} }
func (m *FileInfoListResponse) String() string { return proto.CompactTextString(m) }
func (*FileInfoListResponse) ProtoMessage()    {}
func (*FileInfoListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sftp_325436ee406b1ee3, []int{16}
}
func (m *FileInfoListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfoListResponse.Unmarshal(m, b)
}
func (m *FileInfoListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfoListResponse.Marshal(b, m, deterministic)
}
func (dst *FileInfoListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfoListResponse.Merge(dst, src)
}
func (m *FileInfoListResponse) XXX_Size() int {
	return xxx_messageInfo_FileInfoListResponse.Size(m)
}
func (m *FileInfoListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfoListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfoListResponse proto.InternalMessageInfo

func (m *FileInfoListResponse) GetListing() []*RemoteFileInfo {
	if m != nil {
		return m.Listing
	}
	return nil
}

func (m *FileInfoListResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*RemoteSystemConfig)(nil), "sftpproto.RemoteSystemConfig")
	proto.RegisterType((*RemoteFileInfo)(nil), "sftpproto.RemoteFileInfo")
	proto.RegisterType((*RemoteDataError)(nil), "sftpproto.RemoteDataError")
	proto.RegisterType((*SrvPutRequest)(nil), "sftpproto.SrvPutRequest")
	proto.RegisterType((*SrvGetRequest)(nil), "sftpproto.SrvGetRequest")
	proto.RegisterType((*SrvListRequest)(nil), "sftpproto.SrvListRequest")
	proto.RegisterType((*SrvMkdirRequest)(nil), "sftpproto.SrvMkdirRequest")
	proto.RegisterType((*SrvRemoveRequest)(nil), "sftpproto.SrvRemoveRequest")
	proto.RegisterType((*SrvCopyRequest)(nil), "sftpproto.SrvCopyRequest")
	proto.RegisterType((*SrvRenameRequest)(nil), "sftpproto.SrvRenameRequest")
	proto.RegisterType((*SrvMoveRequest)(nil), "sftpproto.SrvMoveRequest")
	proto.RegisterType((*SrvStatRequest)(nil), "sftpproto.SrvStatRequest")
	proto.RegisterType((*AuthenticationCheckRequest)(nil), "sftpproto.AuthenticationCheckRequest")
	proto.RegisterType((*EmptyResponse)(nil), "sftpproto.EmptyResponse")
	proto.RegisterType((*TransferResponse)(nil), "sftpproto.TransferResponse")
	proto.RegisterType((*FileInfoResponse)(nil), "sftpproto.FileInfoResponse")
	proto.RegisterType((*FileInfoListResponse)(nil), "sftpproto.FileInfoListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SftpRelayClient is the client API for SftpRelay service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SftpRelayClient interface {
	AuthCheck(ctx context.Context, in *AuthenticationCheckRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	Get(ctx context.Context, in *SrvGetRequest, opts ...grpc.CallOption) (*TransferResponse, error)
	Put(ctx context.Context, in *SrvPutRequest, opts ...grpc.CallOption) (*TransferResponse, error)
	Mkdir(ctx context.Context, in *SrvMkdirRequest, opts ...grpc.CallOption) (*FileInfoResponse, error)
	Remove(ctx context.Context, in *SrvRemoveRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	Stat(ctx context.Context, in *SrvStatRequest, opts ...grpc.CallOption) (*FileInfoResponse, error)
	List(ctx context.Context, in *SrvListRequest, opts ...grpc.CallOption) (*FileInfoListResponse, error)
}

type sftpRelayClient struct {
	cc *grpc.ClientConn
}

func NewSftpRelayClient(cc *grpc.ClientConn) SftpRelayClient {
	return &sftpRelayClient{cc}
}

func (c *sftpRelayClient) AuthCheck(ctx context.Context, in *AuthenticationCheckRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/AuthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpRelayClient) Get(ctx context.Context, in *SrvGetRequest, opts ...grpc.CallOption) (*TransferResponse, error) {
	out := new(TransferResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpRelayClient) Put(ctx context.Context, in *SrvPutRequest, opts ...grpc.CallOption) (*TransferResponse, error) {
	out := new(TransferResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpRelayClient) Mkdir(ctx context.Context, in *SrvMkdirRequest, opts ...grpc.CallOption) (*FileInfoResponse, error) {
	out := new(FileInfoResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/Mkdir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpRelayClient) Remove(ctx context.Context, in *SrvRemoveRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpRelayClient) Stat(ctx context.Context, in *SrvStatRequest, opts ...grpc.CallOption) (*FileInfoResponse, error) {
	out := new(FileInfoResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/Stat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sftpRelayClient) List(ctx context.Context, in *SrvListRequest, opts ...grpc.CallOption) (*FileInfoListResponse, error) {
	out := new(FileInfoListResponse)
	err := c.cc.Invoke(ctx, "/sftpproto.SftpRelay/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SftpRelayServer is the server API for SftpRelay service.
type SftpRelayServer interface {
	AuthCheck(context.Context, *AuthenticationCheckRequest) (*EmptyResponse, error)
	Get(context.Context, *SrvGetRequest) (*TransferResponse, error)
	Put(context.Context, *SrvPutRequest) (*TransferResponse, error)
	Mkdir(context.Context, *SrvMkdirRequest) (*FileInfoResponse, error)
	Remove(context.Context, *SrvRemoveRequest) (*EmptyResponse, error)
	Stat(context.Context, *SrvStatRequest) (*FileInfoResponse, error)
	List(context.Context, *SrvListRequest) (*FileInfoListResponse, error)
}

func RegisterSftpRelayServer(s *grpc.Server, srv SftpRelayServer) {
	s.RegisterService(&_SftpRelay_serviceDesc, srv)
}

func _SftpRelay_AuthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticationCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).AuthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/AuthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).AuthCheck(ctx, req.(*AuthenticationCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SftpRelay_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).Get(ctx, req.(*SrvGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SftpRelay_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).Put(ctx, req.(*SrvPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SftpRelay_Mkdir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvMkdirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).Mkdir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/Mkdir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).Mkdir(ctx, req.(*SrvMkdirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SftpRelay_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvRemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).Remove(ctx, req.(*SrvRemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SftpRelay_Stat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvStatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).Stat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/Stat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).Stat(ctx, req.(*SrvStatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SftpRelay_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SrvListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SftpRelayServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sftpproto.SftpRelay/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SftpRelayServer).List(ctx, req.(*SrvListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SftpRelay_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sftpproto.SftpRelay",
	HandlerType: (*SftpRelayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthCheck",
			Handler:    _SftpRelay_AuthCheck_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _SftpRelay_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _SftpRelay_Put_Handler,
		},
		{
			MethodName: "Mkdir",
			Handler:    _SftpRelay_Mkdir_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _SftpRelay_Remove_Handler,
		},
		{
			MethodName: "Stat",
			Handler:    _SftpRelay_Stat_Handler,
		},
		{
			MethodName: "List",
			Handler:    _SftpRelay_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sftp.proto",
}

func init() { proto.RegisterFile("sftp.proto", fileDescriptor_sftp_325436ee406b1ee3) }

var fileDescriptor_sftp_325436ee406b1ee3 = []byte{
	// 799 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0xcd, 0x6e, 0xdb, 0x38,
	0x10, 0x86, 0x22, 0xff, 0x4e, 0x36, 0x8e, 0x41, 0x04, 0x0b, 0xc5, 0xd9, 0x9f, 0x40, 0x40, 0x80,
	0x60, 0x0f, 0x3e, 0x24, 0xd7, 0x60, 0xb3, 0xce, 0xcf, 0x06, 0x45, 0x93, 0xc2, 0x90, 0xdb, 0x4b,
	0x2f, 0x05, 0x23, 0xd3, 0x36, 0x61, 0x59, 0x54, 0x49, 0x4a, 0x81, 0xfb, 0x0e, 0x45, 0xd1, 0x5e,
	0x7a, 0xef, 0x23, 0xf4, 0xdc, 0xc7, 0xe8, 0xb1, 0x0f, 0x53, 0x90, 0x92, 0x2c, 0x2a, 0x4e, 0x7d,
	0x0a, 0x8c, 0xf6, 0x36, 0xf3, 0xcd, 0x0c, 0xf9, 0x69, 0x3e, 0x72, 0x28, 0x00, 0x31, 0x92, 0x51,
	0x37, 0xe2, 0x4c, 0x32, 0xd4, 0x54, 0xb6, 0x36, 0xdd, 0xcf, 0x16, 0x20, 0x8f, 0xcc, 0x98, 0x24,
	0x83, 0xb9, 0x90, 0x64, 0x76, 0xce, 0xc2, 0x11, 0x1d, 0x23, 0x04, 0x95, 0x09, 0x13, 0xd2, 0xb1,
	0xf6, 0xad, 0xc3, 0xa6, 0xa7, 0x6d, 0x85, 0x45, 0x8c, 0x4b, 0x67, 0x63, 0xdf, 0x3a, 0xac, 0x7a,
	0xda, 0x46, 0x1d, 0x68, 0xc4, 0x82, 0xf0, 0x10, 0xcf, 0x88, 0x63, 0xeb, 0xdc, 0x85, 0xaf, 0x62,
	0x11, 0x16, 0xe2, 0x8e, 0xf1, 0xa1, 0x53, 0x49, 0x63, 0xb9, 0x8f, 0xfe, 0x80, 0x66, 0x14, 0xdf,
	0x06, 0xd4, 0x7f, 0x4a, 0xe6, 0x4e, 0x55, 0x07, 0x0b, 0x00, 0xfd, 0x05, 0x10, 0x71, 0x9a, 0x60,
	0x49, 0x54, 0xb8, 0xa6, 0xc3, 0x06, 0xe2, 0x7e, 0xb1, 0xa0, 0x95, 0x92, 0xfe, 0x9f, 0x06, 0xe4,
	0x49, 0x38, 0x62, 0x8a, 0x9c, 0x26, 0x91, 0x11, 0xd6, 0x04, 0x14, 0x61, 0x2c, 0x27, 0x9a, 0x70,
	0xd3, 0xd3, 0xb6, 0xc2, 0x04, 0x7d, 0x93, 0x92, 0xb5, 0x3d, 0x6d, 0x2b, 0x6c, 0xc6, 0x86, 0x24,
	0x23, 0xa9, 0x6d, 0xb4, 0x0f, 0x9b, 0x01, 0x16, 0xf2, 0x45, 0x34, 0xc4, 0x92, 0x0c, 0x35, 0x45,
	0xdb, 0x33, 0x21, 0x95, 0x41, 0xc5, 0x05, 0xe5, 0xc4, 0x97, 0x8c, 0xa7, 0x2c, 0x1b, 0x9e, 0x09,
	0xa1, 0xdf, 0xa1, 0x46, 0xc5, 0x35, 0x0d, 0xa7, 0x4e, 0x5d, 0x07, 0x33, 0xcf, 0x3d, 0x85, 0xed,
	0x94, 0xfd, 0x05, 0x96, 0xf8, 0x92, 0x73, 0xc6, 0x91, 0x03, 0xf5, 0x19, 0x11, 0x02, 0x8f, 0xf3,
	0x2f, 0xc8, 0x5d, 0x45, 0xce, 0x57, 0xe4, 0xb2, 0xae, 0x2b, 0xdb, 0xfd, 0x6a, 0xc1, 0xd6, 0x80,
	0x27, 0xfd, 0x58, 0x7a, 0xe4, 0x75, 0x4c, 0x84, 0x44, 0x3d, 0xf8, 0x4d, 0x18, 0xfa, 0xe9, 0x45,
	0x36, 0x8f, 0xfe, 0xec, 0x2e, 0x84, 0xee, 0x2e, 0x8b, 0xec, 0x95, 0x4a, 0x54, 0xd3, 0xb9, 0xce,
	0xe9, 0x17, 0x3d, 0x33, 0x10, 0x25, 0x59, 0xc0, 0x7c, 0x1c, 0xe8, 0x70, 0xaa, 0x75, 0x01, 0xa0,
	0x1d, 0xa8, 0x8e, 0x18, 0xf7, 0xd3, 0x26, 0x36, 0xbc, 0xd4, 0x51, 0x28, 0xc7, 0xe1, 0x98, 0x64,
	0x12, 0xa7, 0x8e, 0xea, 0x0b, 0x8e, 0x22, 0x12, 0x0e, 0xb3, 0xa6, 0x65, 0x9e, 0x92, 0x55, 0x7d,
	0xd6, 0x15, 0xf9, 0x25, 0x3f, 0xcb, 0x15, 0xd0, 0x1a, 0xf0, 0xe4, 0x9a, 0x8a, 0x35, 0xd2, 0x77,
	0x3f, 0x58, 0xb0, 0x3d, 0xe0, 0xc9, 0xcd, 0x74, 0x48, 0xf9, 0x7a, 0xbb, 0xc6, 0x89, 0x1f, 0x73,
	0x41, 0x93, 0xf4, 0x2e, 0x35, 0xbc, 0x02, 0x70, 0x63, 0x68, 0x0f, 0x78, 0xa2, 0x36, 0x49, 0xc8,
	0x1a, 0x7b, 0xf1, 0xde, 0xd2, 0x0a, 0x9c, 0xb3, 0x68, 0xfe, 0xb3, 0x1c, 0x20, 0xf7, 0x9d, 0x95,
	0xf5, 0x42, 0x4d, 0xa4, 0x35, 0xb2, 0x72, 0xa0, 0x1e, 0x92, 0xbb, 0x67, 0xc5, 0x5c, 0xce, 0x5d,
	0xf7, 0x6d, 0xda, 0xa5, 0x9b, 0xb5, 0x6a, 0x93, 0xf1, 0x31, 0x7a, 0x94, 0xbb, 0xd9, 0xb5, 0x19,
	0x48, 0xbc, 0xce, 0x6b, 0xf3, 0x0a, 0x3a, 0xbd, 0x58, 0x4e, 0x48, 0x28, 0xa9, 0x8f, 0x25, 0x65,
	0xe1, 0xf9, 0x84, 0xf8, 0xd3, 0xc7, 0x23, 0xe0, 0x1e, 0xc0, 0xd6, 0xe5, 0x2c, 0x92, 0x73, 0x8f,
	0x88, 0x88, 0x85, 0x42, 0xcf, 0x0c, 0xa2, 0x46, 0x7d, 0x36, 0xdf, 0x53, 0xc7, 0xfd, 0x68, 0x41,
	0xfb, 0x39, 0xc7, 0xa1, 0x18, 0x11, 0xbe, 0x48, 0xed, 0x41, 0x8b, 0x97, 0x5e, 0xb7, 0x8c, 0xc0,
	0xee, 0x12, 0x81, 0x3c, 0xc1, 0xbb, 0x57, 0x80, 0xfe, 0x81, 0xf6, 0xed, 0x5c, 0x12, 0x91, 0xaf,
	0xcd, 0xc9, 0x50, 0x77, 0xc1, 0xf6, 0x96, 0xf0, 0x82, 0x99, 0x6d, 0x32, 0x9b, 0x42, 0x7b, 0xb1,
	0xfa, 0x23, 0x12, 0x5b, 0x6c, 0xb6, 0x61, 0x6e, 0x86, 0x61, 0x27, 0xcf, 0x48, 0xe7, 0x67, 0xb6,
	0xe1, 0x31, 0xd4, 0x03, 0x2a, 0x24, 0x0d, 0x95, 0x06, 0xf6, 0xea, 0x9d, 0xf2, 0xcc, 0x87, 0xb7,
	0x38, 0xfa, 0x66, 0x43, 0x73, 0x30, 0x92, 0x91, 0x47, 0x02, 0x3c, 0x47, 0xd7, 0xd0, 0x54, 0xfa,
	0x6b, 0xd5, 0xd1, 0x81, 0xb1, 0xe8, 0x8f, 0x4f, 0x45, 0xc7, 0x31, 0xd2, 0xca, 0xda, 0x9e, 0x80,
	0x7d, 0x45, 0x24, 0x32, 0x13, 0x4a, 0xef, 0x58, 0x67, 0xcf, 0x88, 0x2c, 0xc9, 0x7d, 0x02, 0x76,
	0x3f, 0x5e, 0xaa, 0x2e, 0x1e, 0xf7, 0xd5, 0xd5, 0xff, 0x41, 0x55, 0x0f, 0x7f, 0xd4, 0x29, 0xd7,
	0x9b, 0x2f, 0x42, 0x69, 0x85, 0x25, 0x55, 0x4f, 0xa1, 0x96, 0x8e, 0x6a, 0xb4, 0x57, 0x5e, 0xa2,
	0x34, 0xc0, 0x57, 0x7c, 0xfe, 0xbf, 0x50, 0x51, 0xd7, 0x17, 0xed, 0x96, 0xcb, 0x8d, 0x2b, 0xbd,
	0x9a, 0xc0, 0x19, 0x54, 0x94, 0xea, 0xf7, 0xeb, 0x8d, 0x97, 0xb4, 0xf3, 0xf7, 0x03, 0xf5, 0xe6,
	0x49, 0x39, 0xeb, 0xc3, 0x01, 0xe3, 0xe3, 0x2e, 0x1e, 0xe3, 0x84, 0x44, 0x01, 0x96, 0x23, 0xc6,
	0x67, 0x5d, 0x99, 0x35, 0x2b, 0xfd, 0xed, 0xd5, 0x4b, 0x9c, 0xb5, 0x7a, 0x2a, 0x45, 0x9d, 0x84,
	0xbe, 0x02, 0xfb, 0xd6, 0xcb, 0xe2, 0x6f, 0xf8, 0xd3, 0x46, 0x73, 0x11, 0xbd, 0xad, 0x69, 0xe8,
	0xf8, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x25, 0xa3, 0x1a, 0xd2, 0x39, 0x0b, 0x00, 0x00,
}
