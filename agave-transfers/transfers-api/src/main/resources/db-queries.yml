create-transfertasks-table: |
  DROP TABLE IF EXISTS `TransferApiTasks`

  CREATE TABLE IF NOT EXISTS TransferApiTasks (
      `id` bigint(20) NOT NULL AUTO_INCREMENT,
      `attempts` int(11) DEFAULT NULL,
      `bytes_transferred` bigint(20) NOT NULL DEFAULT 0,
      `created` TIMESTAMP NOT NULL,
      `dest` varchar(2048) NOT NULL DEFAULT '',
      `end_time` TIMESTAMP DEFAULT NULL,
      `event_id` varchar(255) DEFAULT NULL,
      `last_updated` TIMESTAMP NOT NULL,
      `owner` varchar(32) NOT NULL,
      `source` varchar(2048) NOT NULL DEFAULT '',
      `start_time` TIMESTAMP DEFAULT NULL,
      `status` varchar(20) DEFAULT NULL,
      `tenant_id` varchar(128) NOT NULL,
      `total_size` bigint(20) DEFAULT NULL,
      `transfer_rate` double DEFAULT NULL,
      `parent_task` varchar(64) DEFAULT NULL,
      `root_task` varchar(64) DEFAULT NULL,
      `uuid` varchar(64) NOT NULL DEFAULT '',
      `total_files` bigint(20) NOT NULL DEFAULT 0,
      `total_skipped` bigint(20) NOT NULL DEFAULT 0,
      `optlock` int(11) DEFAULT NULL,
      `last_attempt` TIMESTAMP DEFAULT NULL,
      `next_attempt` TIMESTAMP DEFAULT NULL,
      `total_skipped_files` bigint(20) NOT NULL DEFAULT 0,
      PRIMARY KEY (`id`),
      UNIQUE KEY `uuid_tenant` (`uuid`,`tenant_id`),
      KEY `parent_task_tenant_id` (`parent_task`,`tenant_id`),
      KEY `root_task_tenant_id` (`root_task`,`tenant_id`)
  ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
  
get-transfertask: |
  SELECT * FROM TransferApiTasks WHERE `uuid` = ? and `tenant_id` = ?
get-transfertask-by-id: |
  SELECT * FROM TransferApiTasks WHERE `id` = ?
create-transfertask: |
  INSERT INTO TransferApiTasks (
    `attempts`,
    `bytes_transferred`,
    `created`,
    `dest`,
    `end_time`,
    `event_id`,
    `last_updated`,
    `last_attempt`,
    `next_attempt`,
    `owner`,
    `source`,
    `start_time`,
    `status`,
    `tenant_id`,
    `total_size`,
    `transfer_rate`,
    `parent_task`,
    `root_task`,
    `uuid`,
    `total_files`,
    `total_skipped_files`)
  VALUES
    (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
save-transfertask: |
  UPDATE TransferApiTasks
  SET `attempts` = ?,
    `bytes_transferred` = ?,
    `end_time` = ?,
    `start_time` = ?,
    `last_attempt` = ?,
    `next_attempt` = ?,
    `status` = ?,
    `total_size` = ?,
    `transfer_rate` = ?,
    `total_files` = ?,
    `total_skipped_files` = ?,
    `last_updated` = NOW()
  WHERE `uuid` = ? AND `tenant_id` = ?
all-transfertasks: |
  SELECT * FROM TransferApiTasks WHERE tenant_id = ? LIMIT ? OFFSET ?
all-user-transfertasks: |
  SELECT * FROM TransferApiTasks WHERE owner = ? AND `tenant_id` = ? LIMIT ? OFFSET ?
delete-transfertask: |
  DELETE FROM TransferApiTasks WHERE uuid = ? AND `tenant_id` = ?
delete-all-transfertasks: |
  DELETE FROM TransferApiTasks WHERE `tenant_id` = ?
update-transfertask-status: |
  UPDATE TransferApiTasks
  SET status = ?, last_updated = NOW()
  WHERE `uuid` = ? AND `tenant_id` = ?
all-transfertask-parents-not-cancelled-or-completed: |
  SELECT  `id` -- count(`id`) AS active_parent_over_time_count
  FROM TransferApiTasks trans1
  WHERE `tenant_id` = 'agave.dev'
  AND `parent_task` = `uuid`
  AND `root_task` is null
  AND `status` not IN ('COMPLETED','CANCELLED', 'CANCELLED_ERROR','FAILED')
  AND ( select count(`id`) as  active_child_count
  from TransferApiTasks
  where `tenant_id` = 'agave.dev'
  and  `parent_task` = trans1.parent_task
  and `start_time` < (trans1.start_time + INTERVAL 500 second )
  AND `status` not IN ('COMPLETED','CANCELLED', 'CANCELLED_ERROR','FAILED')
  )
cancel_transfertask_by_id: |
  UPDATE TransferApiTasks
  SET status = `CANCELLED_ERROR`, last_updated = NOW()
  WHERE `id` = ?
all-transfertask-children-cancelled-or-completed: |
  SELECT count(`id`) AS active_child_count
  FROM TransferApiTasks
  WHERE `tenant_id` = ? AND `parent_task` = ? AND `status` IN ('COMPLETED','CANCELLED', 'CANCELLED_ERROR','FAILED')
all-active-root-transfertask-ids: |
  SELECT distinct `uuid`, `tenant_id`
  FROM TransferApiTasks
  WHERE `root_task` is NULL AND `parent_task` is NULL AND `status` NOT IN ('COMPLETED','CANCELLED','CANCELLED_ERROR','FAILED')
single-not-canceled-or-completed: |
  SELECT count(`id`) AS active_uuid
  FROM TransferApiTasks
  WHERE `tenant_id` = ? AND `uuid` = ? AND `status` NOT IN ('COMPLETED','CANCELLED','CANCELLED_ERROR','FAILED')
all-children-canceled-or-completed: |
  SELECT count(id)
  FROM TransferApiTasks
  WHERE `tenant_id` = ? AND `parent_task` = ? AND status in ('COMPLETED', 'CANCELLED','CANCELLED_ERROR','FAILED')
set-transfertask-cancelled-where-not-completed: |
  UPDATE TransferApiTasks
  SET status = CANCELLED, lastUpdated = NOW()
  WHERE `tenant_id` = ? AND `uuid` = ? AND status not in ('COMPLETED', 'CANCELLED','CANCELLED_ERROR','FAILED')
get_transfertask_tree: |
  SELECT *
  FROM TransferApiTasks
  WHERE parent_task = (SELECT parent_task from TransferApiTasks where `uuid` = ? )
    AND status NOT IN ('COMPLETED', 'CANCELLED','CANCELLED_ERROR','FAILED')
    AND `tenant_id` = ?
  UNION
  SELECT *
  FROM TransferApiTasks
  WHERE `uuid` = ?
  AND `root_task` IS NULL
  AND `tenant_id` = ?
find_transfertask_by_root_task_id_src_dest: |
  SELECT *
  FROM TransferApiTasks
  WHERE `root_task` = ?
    AND `source` = ?
    AND `dest` = ?
    AND `tenant_id` = ?
