create-transfertasks-table: |
  SET PROPERTY "sql.enforce_strict_size" TRUE;
  SET PROPERTY "sql.ignorecase" FALSE;

  DROP TABLE IF EXISTS transfertasks;

  CREATE TABLE IF NOT EXISTS transfertasks (
      "id" BIGINT IDENTITY PRIMARY KEY,
      "attempts" INTEGER,
      "bytes_transferred" DOUBLE,
      "created" TIMESTAMP,
      "dest" VARCHAR(2048) NOT NULL,
      "end_time" TIMESTAMP,
      "event_id" VARCHAR(255),
      "last_updated" TIMESTAMP NOT NULL,
      "owner" VARCHAR(32) NOT NULL,
      "source" VARCHAR(2048) NOT NULL,
      "start_time" TIMESTAMP,
      "status" VARCHAR(16),
      "tenant_id" VARCHAR(128) NOT NULL,
      "total_size" DOUBLE,
      "transfer_rate" DOUBLE,
      "parent_task" BIGINT,
      "root_task" BIGINT,
      "uuid" VARCHAR(64) NOT NULL,
      "total_files" INTEGER DEFAULT 0 NOT NULL,
      "total_skipped" BIGINT DEFAULT 0 NOT NULL,
      CONSTRAINT "fk_parent_task" FOREIGN KEY ("parent_task") REFERENCES transfertasks,
      CONSTRAINT "fk_root_task" FOREIGN KEY ("root_task") REFERENCES transfertasks,
      CONSTRAINT "uuid" UNIQUE ("uuid")
  );
get-transfertask: |
  SELECT * FROM transfertasks WHERE "uuid" = ? and "tenant_id" = ?
create-transfertask: |
  INSERT INTO TransferTasks
    ("attempts", "bytes_transferred", "created", "dest", "end_time", "event_id", "last_updated", "owner", "source", "start_time", "status", "tenant_id", "total_size", "transfer_rate", "parent_task", "root_task", "uuid", "total_files", "total_skipped")
  VALUES
    (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
save-transfertask: |
  UPDATE transfertasks
  SET "attempts" = ?,
    "bytes_transferred" = ?,
    "end_time" = ?,
    "start_time" = ?,
    "status" = ?,
    "total_size" = ?,
    "transfer_rate" = ?,
    "total_files" = ?,
    "total_skipped" = ?,
    "last_updated" = NOW()
  WHERE "uuid" = ? AND "tenant_id" = ?
all-transfertasks: |
  SELECT * FROM transfertasks WHERE "tenant_id" = ?
delete-transfertask: |
  DELETE FROM transfertasks WHERE "uuid" = ? AND "tenant_id" = ?
update-transfertask-status: |
  UPDATE transfertasks
  SET "status" = ?, "last_updated" = NOW()
  WHERE "uuid" = ? AND "tenant_id" = ?
all-transfertask-children-cancelled-or-completed: |
  SELECT count("id") AS "active_child_count"
  FROM transfertasks
  WHERE ("parent_task" = ?) AND "status" NOT IN ('COMPLETED','CANCELLED','FAILED') AND "tenant_id" = ?